{"version":3,"sources":["theme/DarkModeQueryParamReader.tsx"],"names":["DarkModeQueryParamReader","search","location","dispatch","useAppDispatch","useEffect","length","theme","parse","parseArrays","ignoreQueryPrefix","toLowerCase","updateUserDarkMode","userDarkMode"],"mappings":"2HAAA,mFAOe,SAASA,EAAT,GAAwF,IAAxCC,EAAuC,EAAnDC,SAAYD,OACvDE,EAAWC,cAsBjB,OApBAC,qBAAU,WACR,GAAKJ,KACDA,EAAOK,OAAS,GAApB,CAEA,IAKMC,EALSC,gBAAMP,EAAQ,CAC3BQ,aAAa,EACbC,mBAAmB,IAGAH,MAEA,kBAAVA,IAEiB,UAAxBA,EAAMI,cACRR,EAASS,YAAmB,CAAEC,cAAc,KACX,SAAxBN,EAAMI,eACfR,EAASS,YAAmB,CAAEC,cAAc,SAE7C,CAACV,EAAUF,IAEP","file":"static/js/15.c89b3e20.chunk.js","sourcesContent":["import { useEffect } from 'react'\n\nimport { RouteComponentProps } from 'react-router-dom'\nimport { parse } from 'qs'\nimport { useAppDispatch } from 'state/hooks'\nimport { updateUserDarkMode } from '../state/user/actions'\n\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps): null {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (!search) return\n    if (search.length < 2) return\n\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true,\n    })\n\n    const theme = parsed.theme\n\n    if (typeof theme !== 'string') return\n\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({ userDarkMode: false }))\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({ userDarkMode: true }))\n    }\n  }, [dispatch, search])\n\n  return null\n}\n"],"sourceRoot":""}