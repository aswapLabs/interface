{"version":3,"sources":["hooks/useTotalSupply.ts","components/SwitchLocaleLink/index.tsx","components/NavigationTabs/index.tsx","../node_modules/react-feather/dist/icons/chevron-up.js","components/PositionCard/index.tsx","pages/Pool/v2.tsx"],"names":["useTotalSupply2","pair","totalLiquidity","useTotalLiquidity","token0","address","token1","data","CurrencyAmount","fromRawAmount","liquidityToken","undefined","Container","styled","TYPE","small","SwitchLocaleLink","activeLocale","useActiveLocale","browserLocale","useMemo","navigatorLocale","location","useLocation","qs","useParsedQueryString","DEFAULT_LOCALE","targetLocale","search","stringify","lng","Tabs","div","theme","flexRowNoWrap","activeClassName","StyledNavLink","NavLink","attrs","text3","text1","darken","StyledArrowLeft","ArrowLeft","SwapPoolTabs","active","style","marginBottom","display","padding","id","to","isActive","AddRemoveTabs","adding","creating","defaultSlippage","positionID","useTheme","dispatch","useAppDispatch","onClick","resetMintState","resetMintV3State","stroke","text2","mediumHeader","fontWeight","fontSize","placeholderSlippage","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronUp","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","PropTypes","string","oneOfType","number","displayName","FixedHeightRow","RowBetween","StyledPositionCard","Card","bg2","LightCard","bgColor","transparentize","bg3","MinimalPositionCard","showUnwrapped","border","account","useActiveWeb3React","currency0","unwrappedToken","currency1","useState","showMore","setShowMore","userPoolBalance","useTokenBalance","totalPoolTokens","poolTokenPercentage","JSBI","greaterThanOrEqual","quotient","Percent","getLiquidityValue","token0Deposited","token1Deposited","greaterThan","BigInt","gap","Row","margin","symbol","toSignificant","toFixed","marginLeft","subHeader","textAlign","role","FullPositionCard","stakedBalance","userDefaultPoolBalance","add","backgroundColor","useColor","marginRight","Button","borderRadius","minWidth","CurrencyLogo","currency","BIG_INT_ZERO","marginTop","as","Link","currencyId","PageWrapper","AutoColumn","TitleRow","mediaWidth","upToSmall","ButtonRow","RowFixed","ResponsiveButtonPrimary","ButtonPrimary","EmptyProposals","ButtonSecondary","text4","Pool","useContext","ThemeContext","accountAllResource","chainId","useAswapAllPairs","trackedTokenPairs","Array","tokenPairsWithLiquidityTokens","map","tokens","toV2LiquidityToken","liquidityTokens","tpwlt","useTokenBalancesWithLoadingIndicator","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","filter","v2Pairs","useV2Pairs","v2IsLoading","some","V2Pair","allV2PairsWithLiquidity","v2Pair","Boolean","v2PairsWithoutStakedAmount","justify","justifySelf","body"],"mappings":"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","file":"static/js/10.350504d0.chunk.js","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, CurrencyAmount, Currency } from '@uniswap/sdk-core'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useTotalLiquidity } from './useTokenSwapRouter'\nimport { Pair } from '@aswaporg/aswap-v2-sdk'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token?.isToken && totalSupply ? CurrencyAmount.fromRawAmount(token, totalSupply.toString()) : undefined\n}\n\nexport function useTotalSupply2(pair?: Pair): CurrencyAmount<Token> | undefined {\n  const { data: totalLiquidity } = useTotalLiquidity(pair?.token0.address, pair?.token1.address)\n  return pair && totalLiquidity ? CurrencyAmount.fromRawAmount(pair.liquidityToken, totalLiquidity[0]) : undefined\n}\n","import { useMemo } from 'react'\nimport { useLocation } from 'react-router'\nimport styled from 'styled-components/macro'\nimport { DEFAULT_LOCALE, LOCALE_LABEL, SupportedLocale } from '../../constants/locales'\nimport { navigatorLocale, useActiveLocale } from '../../hooks/useActiveLocale'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport { StyledInternalLink, TYPE } from '../../theme'\nimport { stringify } from 'qs'\n\nconst Container = styled(TYPE.small)`\n  opacity: 0.6;\n  :hover {\n    opacity: 1;\n  }\n  margin-top: 1rem !important;\n`\n\nexport function SwitchLocaleLink() {\n  const activeLocale = useActiveLocale()\n  const browserLocale = useMemo(() => navigatorLocale(), [])\n  const location = useLocation()\n  const qs = useParsedQueryString()\n\n  if (browserLocale && (browserLocale !== DEFAULT_LOCALE || activeLocale !== DEFAULT_LOCALE)) {\n    // console.log('msl',browserLocale,activeLocale)\n\n    let targetLocale: SupportedLocale\n    if (activeLocale === browserLocale) {\n      targetLocale = DEFAULT_LOCALE\n    } else {\n      targetLocale = browserLocale\n    }\n    targetLocale = \"en-US\"\n    const target = {\n      ...location,\n      search: stringify({ ...qs, lng: targetLocale }),\n    }\n\n    return (\n      <Container>\n        {/*<Trans>*/}\n        {/*  Atswap available in:{' '}*/}\n        {/*  {*/}\n        {/*    <StyledInternalLink*/}\n        {/*      onClick={() => {*/}\n        {/*        */}\n        {/*      }}*/}\n        {/*      to={target}*/}\n        {/*    >*/}\n        {/*      {LOCALE_LABEL[targetLocale]}*/}\n        {/*    </StyledInternalLink>*/}\n        {/*  }*/}\n        {/*</Trans>*/}\n      </Container>\n    )\n  }\n  return null\n}\n","import styled from 'styled-components/macro'\nimport { darken } from 'polished'\nimport { Trans } from '@lingui/macro'\nimport { NavLink, Link as HistoryLink, useLocation } from 'react-router-dom'\nimport { Percent } from '@uniswap/sdk-core'\n\nimport { ArrowLeft } from 'react-feather'\nimport Row, { RowBetween } from '../Row'\nimport SettingsTab from '../Settings'\n\nimport { useAppDispatch } from 'state/hooks'\nimport { resetMintState } from 'state/mint/actions'\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\nimport { TYPE } from 'theme'\nimport useTheme from 'hooks/useTheme'\n\nconst Tabs = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  border-radius: 3rem;\n  justify-content: space-evenly;\n`\n\nconst activeClassName = 'ACTIVE'\n\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName,\n})`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  height: 3rem;\n  border-radius: 3rem;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({ theme }) => theme.text3};\n  font-size: 20px;\n\n  &.${activeClassName} {\n    border-radius: 12px;\n    font-weight: 500;\n    color: ${({ theme }) => theme.text1};\n  }\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => darken(0.1, theme.text1)};\n  }\n`\n\nconst ActiveText = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n`\n\nconst StyledArrowLeft = styled(ArrowLeft)`\n  color: ${({ theme }) => theme.text1};\n`\n\nexport function SwapPoolTabs({ active }: { active: 'swap' | 'pool' }) {\n  return (\n    <Tabs style={{ marginBottom: '20px', display: 'none', padding: '1rem 1rem 0 1rem' }}>\n      <StyledNavLink id={`swap-nav-link`} to={'/swap'} isActive={() => active === 'swap'}>\n        <Trans>Swap</Trans>\n      </StyledNavLink>\n      <StyledNavLink id={`pool-nav-link`} to={'/pool/v1'} isActive={() => active === 'pool'}>\n        <Trans>Pool</Trans>\n      </StyledNavLink>\n    </Tabs>\n  )\n}\n\nexport function FindPoolTabs({ origin }: { origin: string }) {\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }}>\n        <HistoryLink to={origin}>\n          <StyledArrowLeft />\n        </HistoryLink>\n        <ActiveText>\n          <Trans>Import V2 Pool</Trans>\n        </ActiveText>\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nexport function AddRemoveTabs({\n  adding,\n  creating,\n  defaultSlippage,\n  positionID,\n}: {\n  adding: boolean\n  creating: boolean\n  defaultSlippage: Percent\n  positionID?: string | undefined\n}) {\n  const theme = useTheme()\n  // reset states on back\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n\n  // detect if back should redirect to v3 or v2 pool page\n  // const poolLink = location.pathname.includes('add/v2')\n  //   ? '/pool'\n  //   : '/pool' + (!!positionID ? `/${positionID.toString()}` : '')\n\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }}>\n        <HistoryLink\n          // to={poolLink}\n          to=\"/pool\"\n          onClick={() => {\n            if (adding) {\n              // not 100% sure both of these are needed\n              dispatch(resetMintState())\n              dispatch(resetMintV3State())\n            }\n          }}\n        >\n          <StyledArrowLeft stroke={theme.text2} />\n        </HistoryLink>\n        <TYPE.mediumHeader fontWeight={500} fontSize={20}>\n          {creating ? (\n            <Trans>Create a pair</Trans>\n          ) : adding ? (\n            <Trans>Add Liquidity</Trans>\n          ) : (\n            <Trans>Remove Liquidity</Trans>\n          )}\n        </TYPE.mediumHeader>\n        <SettingsTab placeholderSlippage={defaultSlippage} />\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nexport function CreateProposalTabs() {\n  return (\n    <Tabs>\n      <Row style={{ padding: '1rem 1rem 0 1rem' }}>\n        <HistoryLink to=\"/vote\">\n          <StyledArrowLeft />\n        </HistoryLink>\n        <ActiveText style={{ marginLeft: 'auto', marginRight: 'auto' }}>Create Proposal</ActiveText>\n      </Row>\n    </Tabs>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronUp = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"18 15 12 9 6 15\"\n  }));\n});\nChevronUp.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronUp.displayName = 'ChevronUp';\nexport default ChevronUp;","import JSBI from 'jsbi'\nimport { Percent, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { Pair } from '@aswaporg/aswap-v2-sdk'\nimport { darken } from 'polished'\nimport { useState } from 'react'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components/macro'\nimport { useTotalSupply2 } from '../../hooks/useTotalSupply'\nimport { Trans } from '@lingui/macro'\n\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { ExternalLink, TYPE } from '../../theme'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/unwrappedToken'\nimport { ButtonPrimary, ButtonSecondary, ButtonEmpty } from '../Button'\nimport { transparentize } from 'polished'\n\nimport { useColor } from '../../hooks/useColor'\n\nimport Card, { GreyCard, LightCard } from '../Card'\nimport { AutoColumn } from '../Column'\nimport CurrencyLogo from '../CurrencyLogo'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { RowBetween, RowFixed, AutoRow } from '../Row'\nimport { Dots } from '../swap/styleds'\nimport { BIG_INT_ZERO } from '../../constants/misc'\n\nexport const FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\nexport const HoverCard = styled(Card)`\n  border: 1px solid transparent;\n  :hover {\n    border: 1px solid ${({ theme }) => darken(0.06, theme.bg2)};\n  }\n`\nconst StyledPositionCard = styled(LightCard)<{ bgColor: any }>`\n  border: none;\n  background: ${({ theme, bgColor }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${transparentize(0.8, bgColor)} 0%, ${theme.bg3} 100%) `};\n  position: relative;\n  overflow: hidden;\n`\n\ninterface PositionCardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n  border?: string\n  stakedBalance?: CurrencyAmount<Token> // optional balance to indicate that liquidity is deposited in mining pool\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false, border }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply2(pair)\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.quotient, JSBI.BigInt(0)) ? (\n        <GreyCard border={border}>\n          <AutoColumn gap=\"12px\">\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontWeight={500} fontSize={16}>\n                  <Trans>Your position</Trans>\n                </Text>\n              </RowFixed>\n            </FixedHeightRow>\n            <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n              <RowFixed>\n                <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={true} size={20} />\n                <Text fontWeight={500} fontSize={20}>\n                  {currency0.symbol}/{currency1.symbol}\n                </Text>\n              </RowFixed>\n              <RowFixed>\n                <Text fontWeight={500} fontSize={20}>\n                  {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}\n                </Text>\n              </RowFixed>\n            </FixedHeightRow>\n            <AutoColumn gap=\"4px\">\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={500}>\n                  <Trans>Your pool share:</Trans>\n                </Text>\n                <Text fontSize={16} fontWeight={500}>\n                  {poolTokenPercentage ? poolTokenPercentage.toFixed(6) + '%' : '-'}\n                </Text>\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={500}>\n                  {currency0.symbol}:\n                </Text>\n                {token0Deposited ? (\n                  <RowFixed>\n                    <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n                      {token0Deposited?.toSignificant(6)}\n                    </Text>\n                  </RowFixed>\n                ) : (\n                  '-'\n                )}\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={500}>\n                  {currency1.symbol}:\n                </Text>\n                {token1Deposited ? (\n                  <RowFixed>\n                    <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n                      {token1Deposited?.toSignificant(6)}\n                    </Text>\n                  </RowFixed>\n                ) : (\n                  '-'\n                )}\n              </FixedHeightRow>\n            </AutoColumn>\n          </AutoColumn>\n        </GreyCard>\n      ) : (\n        <LightCard>\n          <TYPE.subHeader style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"wizard-icon\">\n              ⭐️\n            </span>{' '}\n            <Trans>\n              By adding liquidity you&apos;ll earn 0.3% of all trades on this pair proportional to your share of the\n              pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\n            </Trans>{' '}\n          </TYPE.subHeader>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, border, stakedBalance }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userDefaultPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply2(pair)\n\n  // if staked balance balance provided, add to standard liquidity amount\n  const userPoolBalance = stakedBalance ? userDefaultPoolBalance?.add(stakedBalance) : userDefaultPoolBalance\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  const backgroundColor = useColor(pair?.token0)\n\n  return (\n    <StyledPositionCard border={border} bgColor={backgroundColor}>\n      <AutoColumn gap=\"12px\">\n        <FixedHeightRow>\n          <AutoRow gap=\"8px\" style={{ marginLeft: '8px' }}>\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text fontWeight={500} fontSize={20}>\n              {!currency0 || !currency1 ? (\n                <Dots>\n                  <Trans>Loading</Trans>\n                </Dots>\n              ) : (\n                `${currency0.symbol}/${currency1.symbol}`\n              )}\n            </Text>\n          </AutoRow>\n          <RowFixed gap=\"8px\" style={{ marginRight: '4px' }}>\n            <ButtonEmpty padding=\"6px 8px\" borderRadius=\"12px\" width=\"100%\" onClick={() => setShowMore(!showMore)}>\n              {showMore ? (\n                <>\n                  <Trans>Manage</Trans>\n                  <ChevronUp size=\"20\" style={{ marginLeft: '8px', height: '20px', minWidth: '20px' }} />\n                </>\n              ) : (\n                <>\n                  <Trans>Manage</Trans>\n                  <ChevronDown size=\"20\" style={{ marginLeft: '8px', height: '20px', minWidth: '20px' }} />\n                </>\n              )}\n            </ButtonEmpty>\n          </RowFixed>\n        </FixedHeightRow>\n\n        {showMore && (\n          <AutoColumn gap=\"8px\">\n            <FixedHeightRow>\n              <Text fontSize={16} fontWeight={500}>\n                <Trans>Your total pool tokens:</Trans>\n              </Text>\n              <Text fontSize={16} fontWeight={500}>\n                {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}\n              </Text>\n            </FixedHeightRow>\n            {stakedBalance && (\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={500}>\n                  <Trans>Pool tokens in rewards pool:</Trans>\n                </Text>\n                <Text fontSize={16} fontWeight={500}>\n                  {stakedBalance.toSignificant(4)}\n                </Text>\n              </FixedHeightRow>\n            )}\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={500}>\n                  <Trans>Pooled {currency0.symbol}:</Trans>\n                </Text>\n              </RowFixed>\n              {token0Deposited ? (\n                <RowFixed>\n                  <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n                    {token0Deposited?.toSignificant(6)}\n                  </Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={500}>\n                  <Trans>Pooled {currency1.symbol}:</Trans>\n                </Text>\n              </RowFixed>\n              {token1Deposited ? (\n                <RowFixed>\n                  <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n                    {token1Deposited?.toSignificant(6)}\n                  </Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <Text fontSize={16} fontWeight={500}>\n                <Trans>Your pool share:</Trans>\n              </Text>\n              <Text fontSize={16} fontWeight={500}>\n                {poolTokenPercentage ? (\n                  <Trans>\n                    {poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)} %\n                  </Trans>\n                ) : (\n                  '-'\n                )}\n              </Text>\n            </FixedHeightRow>\n            {/* <ButtonSecondary padding=\"8px\" borderRadius=\"8px\">\n              <ExternalLink\n                style={{ width: '100%', textAlign: 'center' }}\n                href={`https://v2.info.uniswap.org/account/${account}`}\n              >\n                <Trans>\n                  View accrued fees and analytics<span style={{ fontSize: '11px' }}>↗</span>\n                </Trans>\n              </ExternalLink>\n            </ButtonSecondary> */}\n            {userDefaultPoolBalance && JSBI.greaterThan(userDefaultPoolBalance.quotient, BIG_INT_ZERO) && (\n              <RowBetween marginTop=\"10px\">\n                {/* <ButtonPrimary\n                  padding=\"8px\"\n                  borderRadius=\"8px\"\n                  as={Link}\n                  to={`/migrate/v2/${pair.liquidityToken.address}`}\n                  width=\"32%\"\n                >\n                  <Trans>Migrate</Trans>\n                </ButtonPrimary> */}\n                <ButtonPrimary\n                  padding=\"8px\"\n                  borderRadius=\"8px\"\n                  as={Link}\n                  to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                  // width=\"32%\"\n                  width=\"49%\"\n                >\n                  <Trans>Add</Trans>\n                </ButtonPrimary>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  borderRadius=\"8px\"\n                  as={Link}\n                  // width=\"32%\"\n                  width=\"49%\"\n                  to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                >\n                  <Trans>Remove</Trans>\n                </ButtonPrimary>\n              </RowBetween>\n            )}\n            {stakedBalance && JSBI.greaterThan(stakedBalance.quotient, BIG_INT_ZERO) && (\n              <ButtonPrimary\n                padding=\"8px\"\n                borderRadius=\"8px\"\n                as={Link}\n                to={`/uni/${currencyId(currency0)}/${currencyId(currency1)}`}\n                width=\"100%\"\n              >\n                <Trans>Manage Liquidity in Rewards Pool</Trans>\n              </ButtonPrimary>\n            )}\n          </AutoColumn>\n        )}\n      </AutoColumn>\n    </StyledPositionCard>\n  )\n}\n","import { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components/macro'\nimport { Link } from 'react-router-dom'\nimport { SwapPoolTabs } from '../../components/NavigationTabs'\nimport FullPositionCard from '../../components/PositionCard'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { TYPE, HideSmall } from '../../theme'\nimport { Text } from 'rebass'\nimport Card from '../../components/Card'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport { ButtonPrimary, ButtonSecondary, ButtonOutlined } from '../../components/Button'\n\nimport { AutoColumn } from '../../components/Column'\n\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useV2Pairs } from '../../hooks/useV2Pairs'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\nimport { Dots } from '../../components/swap/styleds'\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\nimport { Pair } from '@aswaporg/aswap-v2-sdk'\nimport { Trans } from '@lingui/macro'\nimport {useAswapAllPairs} from \"../../hooks/useTokenSwapRouter\";\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\n\nconst TitleRow = styled(RowBetween)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-wrap: wrap;\n    gap: 12px;\n    width: 100%;\n    flex-direction: column-reverse;\n  `};\n`\n\nconst ButtonRow = styled(RowFixed)`\n  gap: 8px;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 100%;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n  `};\n`\n\nconst ResponsiveButtonPrimary = styled(ButtonPrimary)`\n  width: fit-content;\n  border-radius: 12px;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 48%;\n  `};\n`\n\nconst ResponsiveButtonSecondary = styled(ButtonSecondary)`\n  width: fit-content;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    width: 48%;\n  `};\n`\n\nconst EmptyProposals = styled.div`\n  border: 1px solid ${({ theme }) => theme.text4};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account, chainId } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  // const trackedTokenPairs = useTrackedTokenPairs()\n  const {data: accountAllResource} = useAswapAllPairs()\n  // const accountAllResource = useAccountAllResource()\n  // const trackedTokenPairs = useMemo(() => {\n  //   return getAddressAllPairs(account, chainId)\n  // },[account, chainId])\n\n  const trackedTokenPairs = accountAllResource ?? new Array()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(\n    () => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken),\n    [tokenPairsWithLiquidityTokens]\n  )\n  // console.log(\"total666\", liquidityTokens, tokenPairsWithLiquidityTokens)\n\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = useV2Pairs(liquidityTokensWithBalances?.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  // remove any pairs that also are included in pairs with stake in mining pool\n  const v2PairsWithoutStakedAmount = allV2PairsWithLiquidity;\n\n  return (\n    <>\n      <PageWrapper>\n        <SwapPoolTabs active={'pool'} />\n        {/*\n        <VoteCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <TYPE.white fontWeight={600}>\n                  <Trans>Liquidity provider rewards</Trans>\n                </TYPE.white>\n              </RowBetween>\n              <RowBetween>\n                <TYPE.white fontSize={14}>\n                  <Trans>\n                    Liquidity providers earn a 0.3% fee on all trades proportional to their share of the pool. Fees are\n                    added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\n                  </Trans>\n                </TYPE.white>\n              </RowBetween>\n              <ExternalLink\n                style={{ color: 'white', textDecoration: 'underline' }}\n                target=\"_blank\"\n                href=\"https://uniswap.org/docs/v2/core-concepts/pools/\"\n              >\n                <TYPE.white fontSize={14}>\n                  <Trans>Read more about providing liquidity</Trans>\n                </TYPE.white>\n              </ExternalLink>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </VoteCard>\n        */}\n\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <AutoColumn gap=\"md\" style={{ width: '100%' }}>\n            <TitleRow style={{ marginTop: '1rem' }} padding={'0'}>\n              <HideSmall>\n                <TYPE.mediumHeader style={{ marginTop: '0.5rem', justifySelf: 'flex-start' }}>\n                  {/* <Trans>Your V2 liquidity</Trans> */}\n                  <Trans>Your liquidity</Trans>\n                </TYPE.mediumHeader>\n              </HideSmall>\n              <ButtonRow>\n                {/* <ResponsiveButtonSecondary as={Link} padding=\"6px 8px\" to=\"/add/STC\">\n                  <Trans>Create a pair</Trans>\n                </ResponsiveButtonSecondary>\n                <ResponsiveButtonPrimary id=\"find-pool-button\" as={Link} to=\"/pool/find\" padding=\"6px 8px\">\n                  <Text fontWeight={500} fontSize={16}>\n                    <Trans>Import Pool</Trans>\n                  </Text>\n                </ResponsiveButtonPrimary> */}\n                <ResponsiveButtonPrimary id=\"join-pool-button\" as={Link} to=\"/add/STC\" padding=\"6px 8px\">\n                  <Text fontWeight={500} fontSize={16}>\n                    {/* <Trans>Add V2 Liquidity</Trans> */}\n                    <Trans>Add Liquidity</Trans>\n                  </Text>\n                </ResponsiveButtonPrimary>\n              </ButtonRow>\n            </TitleRow>\n\n            {!account ? (\n              <Card padding=\"40px\">\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  <Trans>Connect to a wallet to view your liquidity.</Trans>\n                </TYPE.body>\n              </Card>\n            ) : v2IsLoading ? (\n              <EmptyProposals>\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  <Dots>\n                    <Trans>Loading</Trans>\n                  </Dots>\n                </TYPE.body>\n              </EmptyProposals>\n            ) : allV2PairsWithLiquidity?.length > 0 ? (\n              <>\n                {/* <ButtonSecondary>\n                  <RowBetween>\n                    <Trans>\n                      <ExternalLink href={'https://v2.info.uniswap.org/account/' + account}>\n                        Account analytics and accrued fees\n                      </ExternalLink>\n                      <span> ↗ </span>\n                    </Trans>\n                  </RowBetween>\n                </ButtonSecondary> */}\n                {v2PairsWithoutStakedAmount.map((v2Pair) => (\n                  <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                ))}\n                {/* <RowFixed justify=\"center\" style={{ width: '100%' }}>\n                  <ButtonOutlined\n                    as={Link}\n                    to=\"/migrate/v2\"\n                    id=\"import-pool-link\"\n                    style={{\n                      padding: '8px 16px',\n                      margin: '0 4px',\n                      borderRadius: '12px',\n                      width: 'fit-content',\n                      fontSize: '14px',\n                    }}\n                  >\n                    <ChevronsRight size={16} style={{ marginRight: '8px' }} />\n                    <Trans>Migrate Liquidity to V3</Trans>\n                  </ButtonOutlined>\n                </RowFixed>  */}\n              </>\n            ) : (\n              <EmptyProposals>\n                <TYPE.body color={theme.text3} textAlign=\"center\">\n                  <Trans>No liquidity found.</Trans>\n                </TYPE.body>\n              </EmptyProposals>\n            )}\n          </AutoColumn>\n        </AutoColumn>\n      </PageWrapper>\n      <SwitchLocaleLink />\n    </>\n  )\n}\n"],"sourceRoot":""}