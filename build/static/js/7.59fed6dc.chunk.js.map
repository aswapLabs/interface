{"version":3,"sources":["hooks/useTotalSupply.ts","components/SwitchLocaleLink/index.tsx","components/NavigationTabs/index.tsx","../node_modules/react-feather/dist/icons/chevron-up.js","components/PositionCard/index.tsx","components/swap/UnsupportedCurrencyFooter.tsx","hooks/useIsSwapUnsupported.ts","utils/maxAmountSpend.ts","utils/calculateSlippageAmount.ts","pages/Pool/styleds.tsx","hooks/useApproveCallback.ts","hooks/useTokenAllowance.ts","utils/calculateGasMargin.ts","../node_modules/react-feather/dist/icons/plus.js","state/mint/hooks.ts","pages/AddLiquidityV2/ConfirmAddModalBottom.tsx","pages/AddLiquidityV2/PoolPriceBar.tsx","pages/AddLiquidityV2/index.tsx"],"names":["useTotalSupply2","pair","totalLiquidity","useTotalLiquidity","token0","address","token1","data","CurrencyAmount","fromRawAmount","liquidityToken","undefined","Container","styled","TYPE","small","SwitchLocaleLink","activeLocale","useActiveLocale","browserLocale","useMemo","navigatorLocale","location","useLocation","qs","useParsedQueryString","DEFAULT_LOCALE","targetLocale","search","stringify","lng","Tabs","div","theme","flexRowNoWrap","activeClassName","StyledNavLink","NavLink","attrs","text3","text1","darken","StyledArrowLeft","ArrowLeft","SwapPoolTabs","active","style","marginBottom","display","padding","id","to","isActive","AddRemoveTabs","adding","creating","defaultSlippage","positionID","useTheme","dispatch","useAppDispatch","onClick","resetMintState","resetMintV3State","stroke","text2","mediumHeader","fontWeight","fontSize","placeholderSlippage","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ChevronUp","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","strokeWidth","strokeLinecap","strokeLinejoin","points","propTypes","PropTypes","string","oneOfType","number","displayName","FixedHeightRow","RowBetween","StyledPositionCard","Card","bg2","LightCard","bgColor","transparentize","bg3","MinimalPositionCard","showUnwrapped","border","account","useActiveWeb3React","currency0","unwrappedToken","currency1","useState","showMore","setShowMore","userPoolBalance","useTokenBalance","totalPoolTokens","poolTokenPercentage","JSBI","greaterThanOrEqual","quotient","Percent","getLiquidityValue","token0Deposited","token1Deposited","greaterThan","BigInt","gap","Row","margin","symbol","toSignificant","toFixed","marginLeft","subHeader","textAlign","role","FullPositionCard","stakedBalance","userDefaultPoolBalance","add","backgroundColor","useColor","marginRight","Button","borderRadius","minWidth","CurrencyLogo","currency","BIG_INT_ZERO","marginTop","as","Link","currencyId","DetailsFooter","advancedBG","show","AddressText","blue","mediaWidth","upToSmall","UnsupportedCurrencyFooter","currencies","chainId","showDetails","setShowDetails","tokens","map","wrapped","unsupportedTokens","useUnsupportedTokens","isOpen","onDismiss","token","includes","align","body","href","getExplorerLink","ExplorerDataType","ADDRESS","concat","useIsSwapUnsupported","currencyIn","currencyOut","Boolean","isToken","MIN_NATIVE_CURRENCY_FOR_GAS","exponentiate","maxAmountSpend","currencyAmount","isNative","subtract","ONE","Fraction","calculateSlippageAmount","value","slippage","lessThan","Error","multiply","Wrapper","ClickableText","Text","primary1","MaxButton","button","primary5","Dots","span","loadingAnimation","keyframes","bg1","ApprovalState","useApproveCallback","amountToApprove","spender","currentAllowance","owner","contract","useTokenContract","inputs","allowance","useSingleCallResult","result","toString","useTokenAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","PENDING","NOT_APPROVED","UNKNOWN","tokenContract","addTransaction","useTransactionAdder","approve","useCallback","a","console","error","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","mul","BigNumber","from","then","response","summary","approval","tokenAddress","debug","useApproveCallbackFromTrade","trade","allowedSlippage","v3SwapRouterAddress","SWAP_ROUTER_ADDRESSES","inputAmount","maximumAmountIn","V2Trade","V2_ROUTER_ADDRESS","V3Trade","Plus","x1","y1","x2","y2","ZERO","useMintState","useAppSelector","state","mint","ConfirmAddModalBottom","noLiquidity","price","parsedAmounts","onAdd","Field","CURRENCY_A","CURRENCY_B","justifyContent","invert","PoolPriceBar","useContext","ThemeContext","justify","black","pt","ONE_BIPS","DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE","AddLiquidity","match","params","currencyIdA","currencyIdB","history","library","currencyA_1","useCurrency","currencyB_1","currencyA","setCurrencyA","currencyB","setCurrencyB","useTokenDecimals3","sss","log","toggleWalletModal","useWalletModalToggle","expertMode","useIsExpertMode","independentField","typedValue","otherTypedValue","dependentField","useV2Pair","pairState","totalSupply","PairState","NOT_EXISTS","equal","EXISTS","reserve0","reserve1","balances","useCurrencyBalances","currencyBalances","independentAmount","tryParseAmount","dependentAmount","wrappedIndependentAmount","tokenA","tokenB","dependentCurrency","dependentTokenAmount","priceOf","quote","wrappedCurrencyA","currencyAAmount","currencyBAmount","divide","Price","denominator","numerator","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","INVALID","useDerivedMintInfo","onFieldAInput","typeInput","field","onFieldBInput","useMintActionHandlers","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","useTransactionDeadline","useUserSlippageToleranceWithDefault","txHash","setTxHash","formattedAmounts","maxAmounts","reduce","accumulator","atMaxAmounts","equalTo","router","useV2RouterContract","approvalA","approveACallback","approvalB","approveBCallback","handleAddLiquidity","useAddLiquidity","onAddFunc","firstAdd","parsedAmountA","parsedAmountB","ZERO_PERCENT","amountsMin","regPair1","regFlag","hash","code","modalHeader","mt","lineHeight","italic","modalBottom","pendingText","handleCurrencyASelect","newCurrencyIdA","push","handleCurrencyBSelect","newCurrencyIdB","handleDismissConfirmation","isCreate","pathname","addIsUnsupported","AppBody","TransactionConfirmationModal","content","title","topContent","bottomContent","currencyToAdd","Column","link","CurrencyInputPanel","onUserInput","onMax","toExact","onCurrencySelect","showMaxButton","showCommonBases","disabled","main","mb","maxWidth"],"mappings":"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","file":"static/js/7.59fed6dc.chunk.js","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, CurrencyAmount, Currency } from '@uniswap/sdk-core'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useTotalLiquidity } from './useTokenSwapRouter'\nimport { Pair } from '@aswaporg/aswap-v2-sdk'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token?.isToken && totalSupply ? CurrencyAmount.fromRawAmount(token, totalSupply.toString()) : undefined\n}\n\nexport function useTotalSupply2(pair?: Pair): CurrencyAmount<Token> | undefined {\n  const { data: totalLiquidity } = useTotalLiquidity(pair?.token0.address, pair?.token1.address)\n  return pair && totalLiquidity ? CurrencyAmount.fromRawAmount(pair.liquidityToken, totalLiquidity[0]) : undefined\n}\n","import { useMemo } from 'react'\nimport { useLocation } from 'react-router'\nimport styled from 'styled-components/macro'\nimport { DEFAULT_LOCALE, LOCALE_LABEL, SupportedLocale } from '../../constants/locales'\nimport { navigatorLocale, useActiveLocale } from '../../hooks/useActiveLocale'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport { StyledInternalLink, TYPE } from '../../theme'\nimport { stringify } from 'qs'\n\nconst Container = styled(TYPE.small)`\n  opacity: 0.6;\n  :hover {\n    opacity: 1;\n  }\n  margin-top: 1rem !important;\n`\n\nexport function SwitchLocaleLink() {\n  const activeLocale = useActiveLocale()\n  const browserLocale = useMemo(() => navigatorLocale(), [])\n  const location = useLocation()\n  const qs = useParsedQueryString()\n\n  if (browserLocale && (browserLocale !== DEFAULT_LOCALE || activeLocale !== DEFAULT_LOCALE)) {\n    // console.log('msl',browserLocale,activeLocale)\n\n    let targetLocale: SupportedLocale\n    if (activeLocale === browserLocale) {\n      targetLocale = DEFAULT_LOCALE\n    } else {\n      targetLocale = browserLocale\n    }\n    targetLocale = \"en-US\"\n    const target = {\n      ...location,\n      search: stringify({ ...qs, lng: targetLocale }),\n    }\n\n    return (\n      <Container>\n        {/*<Trans>*/}\n        {/*  Atswap available in:{' '}*/}\n        {/*  {*/}\n        {/*    <StyledInternalLink*/}\n        {/*      onClick={() => {*/}\n        {/*        */}\n        {/*      }}*/}\n        {/*      to={target}*/}\n        {/*    >*/}\n        {/*      {LOCALE_LABEL[targetLocale]}*/}\n        {/*    </StyledInternalLink>*/}\n        {/*  }*/}\n        {/*</Trans>*/}\n      </Container>\n    )\n  }\n  return null\n}\n","import styled from 'styled-components/macro'\nimport { darken } from 'polished'\nimport { Trans } from '@lingui/macro'\nimport { NavLink, Link as HistoryLink, useLocation } from 'react-router-dom'\nimport { Percent } from '@uniswap/sdk-core'\n\nimport { ArrowLeft } from 'react-feather'\nimport Row, { RowBetween } from '../Row'\nimport SettingsTab from '../Settings'\n\nimport { useAppDispatch } from 'state/hooks'\nimport { resetMintState } from 'state/mint/actions'\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\nimport { TYPE } from 'theme'\nimport useTheme from 'hooks/useTheme'\n\nconst Tabs = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  border-radius: 3rem;\n  justify-content: space-evenly;\n`\n\nconst activeClassName = 'ACTIVE'\n\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName,\n})`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  height: 3rem;\n  border-radius: 3rem;\n  outline: none;\n  cursor: pointer;\n  text-decoration: none;\n  color: ${({ theme }) => theme.text3};\n  font-size: 20px;\n\n  &.${activeClassName} {\n    border-radius: 12px;\n    font-weight: 500;\n    color: ${({ theme }) => theme.text1};\n  }\n\n  :hover,\n  :focus {\n    color: ${({ theme }) => darken(0.1, theme.text1)};\n  }\n`\n\nconst ActiveText = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n`\n\nconst StyledArrowLeft = styled(ArrowLeft)`\n  color: ${({ theme }) => theme.text1};\n`\n\nexport function SwapPoolTabs({ active }: { active: 'swap' | 'pool' }) {\n  return (\n    <Tabs style={{ marginBottom: '20px', display: 'none', padding: '1rem 1rem 0 1rem' }}>\n      <StyledNavLink id={`swap-nav-link`} to={'/swap'} isActive={() => active === 'swap'}>\n        <Trans>Swap</Trans>\n      </StyledNavLink>\n      <StyledNavLink id={`pool-nav-link`} to={'/pool/v1'} isActive={() => active === 'pool'}>\n        <Trans>Pool</Trans>\n      </StyledNavLink>\n    </Tabs>\n  )\n}\n\nexport function FindPoolTabs({ origin }: { origin: string }) {\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }}>\n        <HistoryLink to={origin}>\n          <StyledArrowLeft />\n        </HistoryLink>\n        <ActiveText>\n          <Trans>Import V2 Pool</Trans>\n        </ActiveText>\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nexport function AddRemoveTabs({\n  adding,\n  creating,\n  defaultSlippage,\n  positionID,\n}: {\n  adding: boolean\n  creating: boolean\n  defaultSlippage: Percent\n  positionID?: string | undefined\n}) {\n  const theme = useTheme()\n  // reset states on back\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n\n  // detect if back should redirect to v3 or v2 pool page\n  // const poolLink = location.pathname.includes('add/v2')\n  //   ? '/pool'\n  //   : '/pool' + (!!positionID ? `/${positionID.toString()}` : '')\n\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }}>\n        <HistoryLink\n          // to={poolLink}\n          to=\"/pool\"\n          onClick={() => {\n            if (adding) {\n              // not 100% sure both of these are needed\n              dispatch(resetMintState())\n              dispatch(resetMintV3State())\n            }\n          }}\n        >\n          <StyledArrowLeft stroke={theme.text2} />\n        </HistoryLink>\n        <TYPE.mediumHeader fontWeight={500} fontSize={20}>\n          {creating ? (\n            <Trans>Create a pair</Trans>\n          ) : adding ? (\n            <Trans>Add Liquidity</Trans>\n          ) : (\n            <Trans>Remove Liquidity</Trans>\n          )}\n        </TYPE.mediumHeader>\n        <SettingsTab placeholderSlippage={defaultSlippage} />\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nexport function CreateProposalTabs() {\n  return (\n    <Tabs>\n      <Row style={{ padding: '1rem 1rem 0 1rem' }}>\n        <HistoryLink to=\"/vote\">\n          <StyledArrowLeft />\n        </HistoryLink>\n        <ActiveText style={{ marginLeft: 'auto', marginRight: 'auto' }}>Create Proposal</ActiveText>\n      </Row>\n    </Tabs>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChevronUp = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"18 15 12 9 6 15\"\n  }));\n});\nChevronUp.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChevronUp.displayName = 'ChevronUp';\nexport default ChevronUp;","import JSBI from 'jsbi'\nimport { Percent, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { Pair } from '@aswaporg/aswap-v2-sdk'\nimport { darken } from 'polished'\nimport { useState } from 'react'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components/macro'\nimport { useTotalSupply2 } from '../../hooks/useTotalSupply'\nimport { Trans } from '@lingui/macro'\n\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { ExternalLink, TYPE } from '../../theme'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/unwrappedToken'\nimport { ButtonPrimary, ButtonSecondary, ButtonEmpty } from '../Button'\nimport { transparentize } from 'polished'\n\nimport { useColor } from '../../hooks/useColor'\n\nimport Card, { GreyCard, LightCard } from '../Card'\nimport { AutoColumn } from '../Column'\nimport CurrencyLogo from '../CurrencyLogo'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { RowBetween, RowFixed, AutoRow } from '../Row'\nimport { Dots } from '../swap/styleds'\nimport { BIG_INT_ZERO } from '../../constants/misc'\n\nexport const FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\nexport const HoverCard = styled(Card)`\n  border: 1px solid transparent;\n  :hover {\n    border: 1px solid ${({ theme }) => darken(0.06, theme.bg2)};\n  }\n`\nconst StyledPositionCard = styled(LightCard)<{ bgColor: any }>`\n  border: none;\n  background: ${({ theme, bgColor }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${transparentize(0.8, bgColor)} 0%, ${theme.bg3} 100%) `};\n  position: relative;\n  overflow: hidden;\n`\n\ninterface PositionCardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n  border?: string\n  stakedBalance?: CurrencyAmount<Token> // optional balance to indicate that liquidity is deposited in mining pool\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false, border }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply2(pair)\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.quotient, JSBI.BigInt(0)) ? (\n        <GreyCard border={border}>\n          <AutoColumn gap=\"12px\">\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontWeight={500} fontSize={16}>\n                  <Trans>Your position</Trans>\n                </Text>\n              </RowFixed>\n            </FixedHeightRow>\n            <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n              <RowFixed>\n                <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={true} size={20} />\n                <Text fontWeight={500} fontSize={20}>\n                  {currency0.symbol}/{currency1.symbol}\n                </Text>\n              </RowFixed>\n              <RowFixed>\n                <Text fontWeight={500} fontSize={20}>\n                  {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}\n                </Text>\n              </RowFixed>\n            </FixedHeightRow>\n            <AutoColumn gap=\"4px\">\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={500}>\n                  <Trans>Your pool share:</Trans>\n                </Text>\n                <Text fontSize={16} fontWeight={500}>\n                  {poolTokenPercentage ? poolTokenPercentage.toFixed(6) + '%' : '-'}\n                </Text>\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={500}>\n                  {currency0.symbol}:\n                </Text>\n                {token0Deposited ? (\n                  <RowFixed>\n                    <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n                      {token0Deposited?.toSignificant(6)}\n                    </Text>\n                  </RowFixed>\n                ) : (\n                  '-'\n                )}\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={500}>\n                  {currency1.symbol}:\n                </Text>\n                {token1Deposited ? (\n                  <RowFixed>\n                    <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n                      {token1Deposited?.toSignificant(6)}\n                    </Text>\n                  </RowFixed>\n                ) : (\n                  '-'\n                )}\n              </FixedHeightRow>\n            </AutoColumn>\n          </AutoColumn>\n        </GreyCard>\n      ) : (\n        <LightCard>\n          <TYPE.subHeader style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"wizard-icon\">\n              ⭐️\n            </span>{' '}\n            <Trans>\n              By adding liquidity you&apos;ll earn 0.3% of all trades on this pair proportional to your share of the\n              pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\n            </Trans>{' '}\n          </TYPE.subHeader>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, border, stakedBalance }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userDefaultPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply2(pair)\n\n  // if staked balance balance provided, add to standard liquidity amount\n  const userPoolBalance = stakedBalance ? userDefaultPoolBalance?.add(stakedBalance) : userDefaultPoolBalance\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  const backgroundColor = useColor(pair?.token0)\n\n  return (\n    <StyledPositionCard border={border} bgColor={backgroundColor}>\n      <AutoColumn gap=\"12px\">\n        <FixedHeightRow>\n          <AutoRow gap=\"8px\" style={{ marginLeft: '8px' }}>\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text fontWeight={500} fontSize={20}>\n              {!currency0 || !currency1 ? (\n                <Dots>\n                  <Trans>Loading</Trans>\n                </Dots>\n              ) : (\n                `${currency0.symbol}/${currency1.symbol}`\n              )}\n            </Text>\n          </AutoRow>\n          <RowFixed gap=\"8px\" style={{ marginRight: '4px' }}>\n            <ButtonEmpty padding=\"6px 8px\" borderRadius=\"12px\" width=\"100%\" onClick={() => setShowMore(!showMore)}>\n              {showMore ? (\n                <>\n                  <Trans>Manage</Trans>\n                  <ChevronUp size=\"20\" style={{ marginLeft: '8px', height: '20px', minWidth: '20px' }} />\n                </>\n              ) : (\n                <>\n                  <Trans>Manage</Trans>\n                  <ChevronDown size=\"20\" style={{ marginLeft: '8px', height: '20px', minWidth: '20px' }} />\n                </>\n              )}\n            </ButtonEmpty>\n          </RowFixed>\n        </FixedHeightRow>\n\n        {showMore && (\n          <AutoColumn gap=\"8px\">\n            <FixedHeightRow>\n              <Text fontSize={16} fontWeight={500}>\n                <Trans>Your total pool tokens:</Trans>\n              </Text>\n              <Text fontSize={16} fontWeight={500}>\n                {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}\n              </Text>\n            </FixedHeightRow>\n            {stakedBalance && (\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={500}>\n                  <Trans>Pool tokens in rewards pool:</Trans>\n                </Text>\n                <Text fontSize={16} fontWeight={500}>\n                  {stakedBalance.toSignificant(4)}\n                </Text>\n              </FixedHeightRow>\n            )}\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={500}>\n                  <Trans>Pooled {currency0.symbol}:</Trans>\n                </Text>\n              </RowFixed>\n              {token0Deposited ? (\n                <RowFixed>\n                  <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n                    {token0Deposited?.toSignificant(6)}\n                  </Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={500}>\n                  <Trans>Pooled {currency1.symbol}:</Trans>\n                </Text>\n              </RowFixed>\n              {token1Deposited ? (\n                <RowFixed>\n                  <Text fontSize={16} fontWeight={500} marginLeft={'6px'}>\n                    {token1Deposited?.toSignificant(6)}\n                  </Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <Text fontSize={16} fontWeight={500}>\n                <Trans>Your pool share:</Trans>\n              </Text>\n              <Text fontSize={16} fontWeight={500}>\n                {poolTokenPercentage ? (\n                  <Trans>\n                    {poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)} %\n                  </Trans>\n                ) : (\n                  '-'\n                )}\n              </Text>\n            </FixedHeightRow>\n            {/* <ButtonSecondary padding=\"8px\" borderRadius=\"8px\">\n              <ExternalLink\n                style={{ width: '100%', textAlign: 'center' }}\n                href={`https://v2.info.uniswap.org/account/${account}`}\n              >\n                <Trans>\n                  View accrued fees and analytics<span style={{ fontSize: '11px' }}>↗</span>\n                </Trans>\n              </ExternalLink>\n            </ButtonSecondary> */}\n            {userDefaultPoolBalance && JSBI.greaterThan(userDefaultPoolBalance.quotient, BIG_INT_ZERO) && (\n              <RowBetween marginTop=\"10px\">\n                {/* <ButtonPrimary\n                  padding=\"8px\"\n                  borderRadius=\"8px\"\n                  as={Link}\n                  to={`/migrate/v2/${pair.liquidityToken.address}`}\n                  width=\"32%\"\n                >\n                  <Trans>Migrate</Trans>\n                </ButtonPrimary> */}\n                <ButtonPrimary\n                  padding=\"8px\"\n                  borderRadius=\"8px\"\n                  as={Link}\n                  to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                  // width=\"32%\"\n                  width=\"49%\"\n                >\n                  <Trans>Add</Trans>\n                </ButtonPrimary>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  borderRadius=\"8px\"\n                  as={Link}\n                  // width=\"32%\"\n                  width=\"49%\"\n                  to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                >\n                  <Trans>Remove</Trans>\n                </ButtonPrimary>\n              </RowBetween>\n            )}\n            {stakedBalance && JSBI.greaterThan(stakedBalance.quotient, BIG_INT_ZERO) && (\n              <ButtonPrimary\n                padding=\"8px\"\n                borderRadius=\"8px\"\n                as={Link}\n                to={`/uni/${currencyId(currency0)}/${currencyId(currency1)}`}\n                width=\"100%\"\n              >\n                <Trans>Manage Liquidity in Rewards Pool</Trans>\n              </ButtonPrimary>\n            )}\n          </AutoColumn>\n        )}\n      </AutoColumn>\n    </StyledPositionCard>\n  )\n}\n","import { useState } from 'react'\nimport styled from 'styled-components/macro'\nimport { TYPE, CloseIcon, ExternalLink } from 'theme'\nimport { ButtonEmpty } from 'components/Button'\nimport Modal from 'components/Modal'\nimport Card, { OutlineCard } from 'components/Card'\nimport { RowBetween, AutoRow } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { useUnsupportedTokens } from '../../hooks/Tokens'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { Trans } from '@lingui/macro'\n\nconst DetailsFooter = styled.div<{ show: boolean }>`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.text2};\n  background-color: ${({ theme }) => theme.advancedBG};\n  z-index: -1;\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n  text-align: center;\n`\n\nconst AddressText = styled(TYPE.blue)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 10px;\n`}\n`\n\nexport default function UnsupportedCurrencyFooter({\n  show,\n  currencies,\n}: {\n  show: boolean\n  currencies: (Currency | undefined)[]\n}) {\n  const { chainId } = useActiveWeb3React()\n  const [showDetails, setShowDetails] = useState(false)\n\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return currency?.wrapped\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <DetailsFooter show={show}>\n      <Modal isOpen={showDetails} onDismiss={() => setShowDetails(false)}>\n        <Card padding=\"2rem\">\n          <AutoColumn gap=\"lg\">\n            <RowBetween>\n              <TYPE.mediumHeader>\n                <Trans>Unsupported Assets</Trans>\n              </TYPE.mediumHeader>\n              <CloseIcon onClick={() => setShowDetails(false)} />\n            </RowBetween>\n            {tokens.map((token) => {\n              return (\n                token &&\n                unsupportedTokens &&\n                Object.keys(unsupportedTokens).includes(token.address) && (\n                  <OutlineCard key={token.address?.concat('not-supported')}>\n                    <AutoColumn gap=\"10px\">\n                      <AutoRow gap=\"5px\" align=\"center\">\n                        <CurrencyLogo currency={token} size={'24px'} />\n                        <TYPE.body fontWeight={500}>{token.symbol}</TYPE.body>\n                      </AutoRow>\n                      {chainId && (\n                        <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\n                          <AddressText>{token.address}</AddressText>\n                        </ExternalLink>\n                      )}\n                    </AutoColumn>\n                  </OutlineCard>\n                )\n              )\n            })}\n            <AutoColumn gap=\"lg\">\n              <TYPE.body fontWeight={500}>\n                <Trans>\n                  Some assets are not available through this interface because they may not work well with the smart\n                  contracts or we are unable to allow trading for legal reasons.\n                </Trans>\n              </TYPE.body>\n            </AutoColumn>\n          </AutoColumn>\n        </Card>\n      </Modal>\n      <ButtonEmpty padding={'0'} onClick={() => setShowDetails(true)}>\n        <TYPE.blue>\n          <Trans>Read more about unsupported assets</Trans>\n        </TYPE.blue>\n      </ButtonEmpty>\n    </DetailsFooter>\n  )\n}\n","import { Currency, Token } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { useUnsupportedTokens } from './Tokens'\n\n/**\n * Returns true if the input currency or output currency cannot be traded in the interface\n * @param currencyIn the input currency to check\n * @param currencyOut the output currency to check\n */\nexport function useIsSwapUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return useMemo(() => {\n    // if unsupported list loaded & either token on list, mark as unsupported\n    return Boolean(\n      unsupportedTokens &&\n        ((currencyIn?.isToken && unsupportedTokens[currencyIn.address]) ||\n          (currencyOut?.isToken && unsupportedTokens[currencyOut.address]))\n    )\n  }, [currencyIn, currencyOut, unsupportedTokens])\n}\n","import { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst MIN_NATIVE_CURRENCY_FOR_GAS: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount<Currency>): CurrencyAmount<Currency> | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency.isNative) {\n    if (JSBI.greaterThan(currencyAmount.quotient, MIN_NATIVE_CURRENCY_FOR_GAS)) {\n      return CurrencyAmount.fromRawAmount(\n        currencyAmount.currency,\n        JSBI.subtract(currencyAmount.quotient, MIN_NATIVE_CURRENCY_FOR_GAS)\n      )\n    } else {\n      return CurrencyAmount.fromRawAmount(currencyAmount.currency, JSBI.BigInt(0))\n    }\n  }\n  return currencyAmount\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst ONE = new Fraction(1, 1)\n\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: Percent): [JSBI, JSBI] {\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) throw new Error('Unexpected slippage')\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient]\n}\n","import { Text } from 'rebass'\nimport styled, { keyframes } from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 20px;\n`\n\nexport const ClickableText = styled(Text)`\n  :hover {\n    cursor: pointer;\n  }\n  color: ${({ theme }) => theme.primary1};\n`\nexport const MaxButton = styled.button<{ width: string }>`\n  padding: 0.5rem 1rem;\n  background-color: ${({ theme }) => theme.primary5};\n  border: 1px solid ${({ theme }) => theme.primary5};\n  border-radius: 0.5rem;\n  font-size: 1rem;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    padding: 0.25rem 0.5rem;\n  `};\n  font-weight: 500;\n  cursor: pointer;\n  margin: 0.25rem;\n  overflow: hidden;\n  color: ${({ theme }) => theme.primary1};\n  :hover {\n    border: 1px solid ${({ theme }) => theme.primary1};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.primary1};\n    outline: none;\n  }\n`\n\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nconst loadingAnimation = keyframes`\n  0% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nexport const LoadingRows = styled.div`\n  display: grid;\n  min-width: 75%;\n  max-width: 960px;\n  grid-column-gap: 0.5em;\n  grid-row-gap: 0.8em;\n  grid-template-columns: repeat(3, 1fr);\n  & > div {\n    animation: ${loadingAnimation} 1.5s infinite;\n    animation-fill-mode: both;\n    background: linear-gradient(\n      to left,\n      ${({ theme }) => theme.bg1} 25%,\n      ${({ theme }) => theme.bg2} 50%,\n      ${({ theme }) => theme.bg1} 75%\n    );\n    background-size: 400%;\n    border-radius: 12px;\n    height: 2.4em;\n    will-change: background-position;\n  }\n  & > div:nth-child(4n + 1) {\n    grid-column: 1 / 3;\n  }\n  & > div:nth-child(4n) {\n    grid-column: 3 / 4;\n    margin-bottom: 2em;\n  }\n`\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { CurrencyAmount, Percent, Currency, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@aswaporg/aswap-v2-sdk'\nimport { Trade as V3Trade } from '@uniswap/v3-sdk'\nimport { useCallback, useMemo } from 'react'\nimport { SWAP_ROUTER_ADDRESSES, V2_ROUTER_ADDRESS } from '../constants/addresses'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { calculateGasMargin } from '../utils/calculateGasMargin'\nimport { useTokenContract } from './useContract'\nimport { useActiveWeb3React } from './web3'\nimport { useTokenAllowance } from './useTokenAllowance'\n\nexport enum ApprovalState {\n  UNKNOWN = 'UNKNOWN',\n  NOT_APPROVED = 'NOT_APPROVED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount<Currency>,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency.isNative) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: 'Approve ' + amountToApprove.currency.symbol,\n          approval: { tokenAddress: token.address, spender: spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.debug('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(\n  trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | undefined,\n  allowedSlippage: Percent\n) {\n  const { chainId } = useActiveWeb3React()\n  const v3SwapRouterAddress = chainId ? SWAP_ROUTER_ADDRESSES[chainId] : undefined\n  const amountToApprove = useMemo(\n    () => (trade && trade.inputAmount.currency.isToken ? trade.maximumAmountIn(allowedSlippage) : undefined),\n    [trade, allowedSlippage]\n  )\n  return useApproveCallback(\n    amountToApprove,\n    chainId\n      ? trade instanceof V2Trade\n        ? V2_ROUTER_ADDRESS[chainId]\n        : trade instanceof V3Trade\n        ? v3SwapRouterAddress\n        : undefined\n      : undefined\n  )\n}\n","import { Token, CurrencyAmount } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useTokenContract } from './useContract'\n\nexport function useTokenAllowance(token?: Token, owner?: string, spender?: string): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? CurrencyAmount.fromRawAmount(token, allowance.toString()) : undefined),\n    [token, allowance]\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\n\n// add 20%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000 + 2000)).div(BigNumber.from(10000))\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;","import { t } from '@lingui/macro'\nimport { useCallback, useMemo } from 'react'\nimport { AppState } from '../index'\nimport { Field, typeInput } from './actions'\nimport { Pair } from '@aswaporg/aswap-v2-sdk'\nimport { Currency, Token, Percent, Price, CurrencyAmount } from '@aswaporg/aswap-sdk-core'\nimport JSBI from 'jsbi'\nimport { PairState, useV2Pair } from '../../hooks/useV2Pairs'\nimport { useTotalSupply2 } from '../../hooks/useTotalSupply'\n\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useAppSelector((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  price?: Price<Currency, Currency>\n  noLiquidity?: boolean\n  liquidityMinted?: CurrencyAmount<Token>\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // pair\n  const [pairState, pair] = useV2Pair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n  const totalSupply = useTotalSupply2(pair ?? undefined)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(totalSupply && JSBI.equal(totalSupply.quotient, ZERO)) ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.quotient, ZERO) &&\n        JSBI.equal(pair.reserve1.quotient, ZERO)\n    )\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseAmount(\n    typedValue,\n    currencies[independentField]\n  )\n\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    } else if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = independentAmount?.wrapped\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency?.isNative\n          ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n          : dependentTokenAmount\n      }\n      return undefined\n    } else {\n      return undefined\n    }\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }\n  }, [dependentAmount, independentAmount, independentField])\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount?.greaterThan(0) && currencyBAmount?.greaterThan(0)) {\n        const value = currencyBAmount.divide(currencyAAmount)\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, value.denominator, value.numerator)\n      }\n      return undefined\n    } else {\n      const wrappedCurrencyA = currencyA?.wrapped\n      return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n    }\n  }, [currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount?.wrapped, currencyBAmount?.wrapped]\n    // console.log(\"计算百分比：\", pair , totalSupply , tokenAmountA , tokenAmountB)\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      try {\n        const lptMinted = pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n        return lptMinted\n      } catch (error) {\n        console.error(error)\n        return undefined\n      }\n    } else {\n      return undefined\n    }\n  }, [parsedAmounts, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\n    } else {\n      return undefined\n    }\n  }, [liquidityMinted, totalSupply])\n\n  // console.log(\"计算百分比：\", pair , liquidityMinted, totalSupply , poolTokenPercentage)\n  let error: string | undefined\n  if (!account) {\n    error = t`Connect Wallet`\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? t`Invalid pair`\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? t`Enter an amount`\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = t`Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = t`Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@uniswap/sdk-core'\nimport { Text } from 'rebass'\nimport { ButtonPrimary } from '../../components/Button'\nimport { RowBetween, RowFixed } from '../../components/Row'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport { Field } from '../../state/mint/actions'\nimport { TYPE } from '../../theme'\nimport { Trans } from '@lingui/macro'\n\nexport function ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  return (\n    <>\n      <RowBetween>\n        <TYPE.body>\n          <Trans>{currencies[Field.CURRENCY_A]?.symbol} Deposited</Trans>\n        </TYPE.body>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <TYPE.body>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</TYPE.body>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <TYPE.body>\n          <Trans>{currencies[Field.CURRENCY_B]?.symbol} Deposited</Trans>\n        </TYPE.body>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <TYPE.body>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</TYPE.body>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <TYPE.body>\n          <Trans>Rates</Trans>\n        </TYPE.body>\n        <TYPE.body>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </TYPE.body>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <TYPE.body>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </TYPE.body>\n      </RowBetween>\n      <RowBetween>\n        <TYPE.body>\n          <Trans>Share of Pool:</Trans>\n        </TYPE.body>\n        <TYPE.body>\n          <Trans>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Trans>\n        </TYPE.body>\n      </RowBetween>\n      <ButtonPrimary style={{ margin: '20px 0 0 0' }} onClick={onAdd}>\n        <Text fontWeight={500} fontSize={20}>\n          {noLiquidity ? <Trans>Create Pool & Supply</Trans> : <Trans>Confirm Supply</Trans>}\n        </Text>\n      </ButtonPrimary>\n    </>\n  )\n}\n","import { Currency, Percent, Price } from '@aswaporg/aswap-sdk-core'\nimport { useContext } from 'react'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { AutoColumn } from '../../components/Column'\nimport { AutoRow } from '../../components/Row'\nimport { ONE_BIPS } from '../../constants/misc'\nimport { Field } from '../../state/mint/actions'\nimport { TYPE } from '../../theme'\nimport { Trans } from '@lingui/macro'\n\nexport function PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price<Currency, Currency>\n}) {\n  const theme = useContext(ThemeContext)\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <TYPE.black>{price?.toSignificant(6) ?? '-'}</TYPE.black>\n          <Text fontWeight={500} fontSize={14} color={theme.text2} pt={1}>\n            <Trans>\n              {currencies[Field.CURRENCY_B]?.symbol} per {currencies[Field.CURRENCY_A]?.symbol}\n            </Trans>\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <TYPE.black>{price?.invert()?.toSignificant(6) ?? '-'}</TYPE.black>\n          <Text fontWeight={500} fontSize={14} color={theme.text2} pt={1}>\n            <Trans>\n              {currencies[Field.CURRENCY_A]?.symbol} per {currencies[Field.CURRENCY_B]?.symbol}\n            </Trans>\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <TYPE.black>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n              {/*: poolTokenPercentage}*/}\n            %\n          </TYPE.black>\n          <Text fontWeight={500} fontSize={14} color={theme.text2} pt={1}>\n            <Trans>Share of Pool</Trans>\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import { Currency, CurrencyAmount, Percent } from '@aswaporg/aswap-sdk-core'\nimport { useCallback, useContext, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components/macro'\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween, RowFlat } from '../../components/Row'\n\nimport { ZERO_PERCENT } from '../../constants/misc'\nimport { useV2RouterContract } from '../../hooks/useContract'\nimport { PairState } from '../../hooks/useV2Pairs'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport {regPair, regPair1, useCurrency} from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useIsExpertMode, useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport { TYPE } from '../../theme'\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport { PoolPriceBar } from './PoolPriceBar'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\nimport { t, Trans } from '@lingui/macro'\nimport { useAddLiquidity } from 'hooks/useTokenSwapScript'\nimport {useTokenDecimals2, useTokenDecimals3} from \"../../hooks/useTokenSwapRouter\";\nimport {Token as TokenNew} from \"@aswaporg/aswap-sdk-core/dist/entities/token\";\n\nconst DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const currencyA_1 = useCurrency(currencyIdA)\n  const currencyB_1 = useCurrency(currencyIdB)\n\n  const [currencyA, setCurrencyA] = useState<Currency|null|undefined>(currencyA_1);\n  const [currencyB, setCurrencyB] = useState<Currency|null|undefined>(currencyB_1);\n  // const {data:currencyA1} = useTokenDecimals2(currencyIdA)\n  // const {data:currencyB1} = useTokenDecimals2(currencyIdB)\n  const asyncSearchTokenA = useTokenDecimals3(currencyIdA);\n  asyncSearchTokenA.then((sss)=> {\n    if(currencyA_1===undefined){\n      setCurrencyA(sss)\n    }\n  })\n  const asyncSearchTokenB = useTokenDecimals3(currencyIdB);\n  asyncSearchTokenB.then((sss)=> {\n    if(currencyB_1 === undefined){\n      setCurrencyB(sss)\n    }\n  })\n\n  if(currencyIdB!==undefined && currencyB!==undefined){\n    console.log(\"addd\")\n  }\n\n  // const oneCurrencyIsWETH = Boolean(\n  //   chainId &&\n  //     ((currencyA && currencyA.equals(WETH9_EXTENDED[chainId])) ||\n  //       (currencyB && currencyB.equals(WETH9_EXTENDED[chainId])))\n  // )\n  const oneCurrencyIsWETH = false\n\n  const toggleWalletModal = useWalletModalToggle() // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE) // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  const router = useV2RouterContract()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], router?.address)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], router?.address)\n\n  // const addTransaction = useTransactionAdder()\n\n  const handleAddLiquidity = useAddLiquidity(account ?? undefined)\n\n  //firstAdd：是否是首次添加\n  async function onAddFunc(firstAdd: boolean|undefined) {\n    if(firstAdd === undefined) return\n    // if (!chainId || !library || !account || !router) return\n    if (!chainId || !library || !account) return\n\n    // console.log(\"adddd\")\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    // if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n    }\n\n    setAttemptingTxn(true)\n\n    if(firstAdd){\n      //注册交易对\n      const regPairRes = regPair1(chainId, currencyA?.wrapped?.address, currencyB?.wrapped?.address)\n\n      regPairRes.then((regFlag)=>{\n        if(!regFlag){\n          //todo 弹窗，注册交易对失败\n          // console.log(\"注册交易对失败\")\n          setAttemptingTxn(false)\n          return\n        }\n        // console.log(\"注册交易对成功\")\n\n        handleAddLiquidity(\n            currencyA?.wrapped?.address ?? '',\n            currencyB?.wrapped?.address ?? '',\n            parsedAmountA.quotient.toString(),\n            parsedAmountB.quotient.toString(),\n            amountsMin[Field.CURRENCY_A].toString(),\n            amountsMin[Field.CURRENCY_B].toString()\n        ).then((hash) => {\n              setAttemptingTxn(false)\n              setTxHash(hash)\n            })\n            .catch((error) => {\n              setAttemptingTxn(false)\n              if (error?.code !== 4001) {\n                console.error(error)\n              }\n            })\n      })\n\n    }else {\n      // await estimate(...args, value ? { value } : {})\n      //   .then((estimatedGasLimit) =>\n      //     method(...args, {\n      //       ...(value ? { value } : {}),\n      //       gasLimit: calculateGasMargin(estimatedGasLimit),\n      //     }).then((response) => {\n      handleAddLiquidity(\n          currencyA?.wrapped?.address ?? '',\n          currencyB?.wrapped?.address ?? '',\n          parsedAmountA.quotient.toString(),\n          parsedAmountB.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString()\n      )\n          // .then((response) => {\n          .then((hash) => {\n            setAttemptingTxn(false)\n\n            // addTransaction(response, {\n            //   summary: t`Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n            //     currencies[Field.CURRENCY_A]?.symbol\n            //   } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n            // })\n\n            // setTxHash(response.hash)\n            setTxHash(hash)\n\n          })\n          .catch((error) => {\n            setAttemptingTxn(false)\n            // we only care if the error is something _other_ than the user rejected the tx\n            if (error?.code !== 4001) {\n              console.error(error)\n            }\n          })\n    }\n\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\n          <RowFlat>\n            <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n              {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\n            </Text>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <Text fontSize=\"24px\">\n            {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + ' Pool Tokens'}\n          </Text>\n        </Row>\n        <TYPE.italic fontSize={12} textAlign=\"left\" padding={'8px 0 0 0 '}>\n          <Trans>\n            Output is estimated. If the price changes by more than {allowedSlippage.toSignificant(4)}% your transaction\n            will revert.\n          </Trans>\n        </TYPE.italic>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={()=>onAddFunc(noLiquidity)}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t`Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencies[Field.CURRENCY_A]?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        //todo\n        setCurrencyA(currencyA)\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        //todo\n        setCurrencyB(currencyB)\n        history.push(`/add/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const isCreate = history.location.pathname.includes('/create')\n\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={isCreate} adding={true} defaultSlippage={DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={noLiquidity ? <Trans>You are creating a pool</Trans> : <Trans>You will receive</Trans>}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n            currencyToAdd={pair?.liquidityToken}\n          />\n          <AutoColumn gap=\"20px\">\n            {noLiquidity ||\n              (isCreate ? (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <TYPE.link fontWeight={600} color={'primaryText1'}>\n                        <Trans>You are the first liquidity provider.</Trans>\n                      </TYPE.link>\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        <Trans>The ratio of tokens you add will set the price of this pool.</Trans>\n                      </TYPE.link>\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        <Trans>Once you are happy with the rate click supply to review.</Trans>\n                      </TYPE.link>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ) : (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        <Trans>\n                          <b>\n                            <Trans>Tip:</Trans>\n                          </b>{' '}\n                          When you add liquidity, you will receive pool tokens representing your position. These tokens\n                          automatically earn fees proportional to your share of the pool, and can be redeemed at any\n                          time.\n                        </Trans>\n                      </TYPE.link>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ))}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <Plus size=\"16\" color={theme.text2} />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius={'20px'}>\n                  <RowBetween padding=\"1rem\">\n                    <TYPE.subHeader fontWeight={500} fontSize={14}>\n                      {noLiquidity ? (\n                        <Trans>Initial prices and pool share</Trans>\n                      ) : (\n                        <Trans>Prices and pool share</Trans>\n                      )}\n                    </TYPE.subHeader>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius={'20px'}>\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <ButtonPrimary disabled={true}>\n                <TYPE.main mb=\"4px\">\n                  <Trans>Unsupported Asset</Trans>\n                </TYPE.main>\n              </ButtonPrimary>\n            ) : !account ? (\n              <ButtonLight onClick={toggleWalletModal}>\n                <Trans>Connect Wallet</Trans>\n              </ButtonLight>\n            ) : (\n              <AutoColumn gap={'md'}>\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>\n                              <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                            </Dots>\n                          ) : (\n                            <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                          )}\n                        </ButtonPrimary>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>\n                              <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                            </Dots>\n                          ) : (\n                            <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                          )}\n                        </ButtonPrimary>\n                      )}\n                    </RowBetween>\n                  )}\n                <ButtonError\n                  onClick={() => {\n                    expertMode ? onAddFunc(undefined) : setShowConfirm(true)\n                  }}\n                  // disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                  disabled={!isValid}\n                  error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {error ?? <Trans>Supply</Trans>}\n                  </Text>\n                </ButtonError>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n      <SwitchLocaleLink />\n\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter\n          show={addIsUnsupported}\n          currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n        />\n      )}\n    </>\n  )\n}\n"],"sourceRoot":""}