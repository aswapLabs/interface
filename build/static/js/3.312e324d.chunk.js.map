{"version":3,"sources":["hooks/useSwapSlippageTolerance.ts","state/swap/hooks.ts","utils/prices.ts","hooks/useENS.ts","hooks/useTokenSwapScript.ts","pages/AppBody.tsx","hooks/useLast.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/styleds.tsx","components/ListLogo/index.tsx","components/SearchModal/ImportRow.tsx","assets/svg/tokenlist.svg","components/SearchModal/CurrencyList.tsx","hooks/useToggle.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/sorting.ts","components/SearchModal/ImportToken.tsx","utils/getTokenList.ts","utils/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","components/Toggle/ListToggle.tsx","components/SearchModal/ManageLists.tsx","utils/listVersionLabel.ts","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/CurrencySearchModal.tsx","components/SearchModal/ImportList.tsx","assets/images/dropdown.svg","components/NumericalInput/index.tsx","components/CurrencyInputPanel/index.tsx","utils/formatCurrencyAmount.ts","hooks/usePools.ts","hooks/useV3SwapPools.ts","hooks/useAllCurrencyCombinations.ts","hooks/useAllV3Routes.ts","hooks/useBestV3Trade.ts","assets/images/blue-loader.svg","assets/images/metamask.png","components/TransactionConfirmationModal/index.tsx","hooks/useAddTokenToMetamask.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","hooks/useENSAddress.ts","hooks/useV2Trade.ts","utils/isTradeBetter.ts","components/HoverInlineText/index.tsx","components/CurrencyInputPanel/FiatValue.tsx"],"names":["V2_SWAP_DEFAULT_SLIPPAGE","Percent","V3_SWAP_DEFAULT_SLIPPAGE","ONE_TENTHS_PERCENT","useSwapState","useAppSelector","state","swap","useSwapActionHandlers","dispatch","useAppDispatch","onCurrencySelection","useCallback","field","currency","selectCurrency","currencyId","isToken","address","isNative","onSwitchTokens","switchCurrencies","onUserInput","typedValue","typeInput","onChangeRecipient","recipient","setRecipient","tryParseAmount","value","typedValueParsed","parseUnits","decimals","toString","CurrencyAmount","fromRawAmount","JSBI","BigInt","error","console","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","trade","checksummedAddress","V2Trade","route","path","tokenPath","some","token","pairs","pair","liquidityToken","useDerivedSwapInfo","toggledVersion","inputError","account","useActiveWeb3React","useUserSingleHopOnly","singleHopOnly","independentField","inputCurrencyId","Field","INPUT","outputCurrencyId","OUTPUT","inputCurrency","useCurrency","outputCurrency","recipientLookup","useENS","undefined","to","relevantTokenBalances","useCurrencyBalances","isExactIn","parsedAmount","bestV2TradeExactIn","useV2TradeExactIn","maxHops","bestV2TradeExactOut","useV2TradeExactOut","v2Trade","currencyBalances","currencies","formattedTo","isAddress","toggledTrade","allowedSlippage","defaultSlippageTolerance","useMemo","useUserSlippageToleranceWithDefault","useSwapSlippageTolerance","maximumAmountIn","balanceIn","amountIn","lessThan","symbol","v3TradeState","V3TradeState","INVALID","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","test","validatedRecipient","exactAmount","isNaN","parseFloat","toLowerCase","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","chainId","useParsedQueryString","useState","result","setResult","useEffect","parsed","replaceSwapState","THIRTY_BIPS_FEE","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","subtract","computeRealizedLPFeePercent","percent","reduce","currentFee","multiply","pools","pool","Fraction","fee","numerator","denominator","IMPACT_TIERS","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_LOW","warningSeverity","priceImpact","impact","length","nameOrAddress","validated","reverseLookup","useENSName","lookup","useENSAddress","loading","name","ENSName","PREFIX","serializeU128","se","bcs","BcsSerializer","hexlify","getBytes","serializeScriptFunction","scriptFunction","serialize","useSwapExactTokenForToken","signer","provider","useStarcoinProvider","expiredSecs","useTransactionExpirationSecs","x","y","m","amount_x_in","amount_y_out_min","a","functionId","tyArgs","utils","tx","encodeStructTypeTags","args","arrayify","encodeScriptFunction","getSigner","sendUncheckedTransaction","data","transactionHash","useSwapTokenForExactToken","amount_x_in_max","amount_y_out","useAddLiquidity","amount_x_desired","amount_y_desired","amount_x_min","amount_y_min","useRemoveLiquidity","liquidity","BodyWrapper","styled","div","margin","maxWidth","AppBody","children","rest","useLast","filterFn","last","setLast","BaseWrapper","theme","disable","bg3","bg2","text3","CommonBases","onSelect","selectedCurrency","bases","COMMON_BASES","gap","fontWeight","fontSize","QuestionHelper","text","map","isSelected","equals","onClick","CurrencyLogo","style","marginRight","TextDot","flexRowNoWrap","props","show","text2","Checkbox","RowFixed","primary1","input","red3","PaddedColumn","AutoColumn","MenuItem","RowBetween","disabled","selected","SearchInput","text1","Separator","SeparatorDark","StyledListLogo","Logo","size","ListLogo","logoURI","alt","srcs","useHttpLocations","TokenSection","dim","CheckIcon","CheckCircle","green1","NameOverflow","ImportRow","showImportView","setImportToken","useTheme","isAdded","useIsUserAddedToken","isActive","useIsTokenActive","list","WrappedTokenInfo","opacity","body","darkGray","ml","title","small","mr","color","minWidth","main","Button","width","padding","currencyKey","StyledBalanceText","Text","Tag","FixedContentRow","Balance","balance","toExact","toSignificant","TagContainer","TokenListLogoWrapper","img","TokenTags","tags","tag","description","id","slice","join","CurrencyRow","otherSelected","showCurrencyAmount","key","selectedTokenList","useCombinedActiveList","isOnSelectedList","isTokenOnList","customAdded","useCurrencyBalance","className","Column","justifySelf","Loader","BREAK_LINE","isBreakLine","BreakLineComponent","borderRadius","src","TokenListLogo","CurrencyList","height","otherListTokens","onCurrencySelect","otherCurrency","fixedListRef","itemData","Row","index","row","Boolean","wrapped","itemKey","ref","itemCount","itemSize","useToggle","initialState","setState","toggle","ContentWrapper","Footer","bg1","CurrencySearch","otherSelectedCurrency","showCommonBases","disableNonToken","onDismiss","isOpen","showManageView","fixedList","useRef","searchQuery","setSearchQuery","searchToken","setSearchToken","debouncedQuery","useDebounce","invertSearchOrder","allTokens","useAllTokens","isAddressSearch","useTokenDecimals3","then","sss","log","searchTokenIsAdded","tokenComparator","inverted","balances","useAllTokenBalances","comparator","tokenA","tokenB","balanceA","balanceB","balanceComp","greaterThan","equalTo","getTokenComparator","useTokenComparator","filteredTokens","filterTokens","Object","values","toLowerCaseAddress","sortedTokens","sort","filteredSortedTokens","useSortedTokensByQuery","star","ExtendedStar","onChain","filteredSortedTokensWithSTC","s","trim","handleCurrencySelect","inputRef","handleInput","event","target","checksummedInput","current","scrollTo","handleEnter","e","open","node","useOnClickOutside","filteredInactiveTokens","useSearchInactiveTokenLists","type","placeholder","autoComplete","onChange","onKeyDown","flex","disableWidth","textAlign","mb","justify","stroke","primaryText1","Wrapper","WarningWrapper","Card","highWarning","transparentize","red1","yellow2","AddressText","TYPE","blue","mediaWidth","upToSmall","ImportToken","tokens","onBack","addToken","useAddUserToken","cursor","mediumHeader","marginBottom","strokeWidth","backgroundColor","href","getExplorerLink","ExplorerDataType","ADDRESS","altDisabledStyle","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","resolveENSContentHash","parsedENS","parseENSAddress","ensName","contentHashUri","Error","translatedUri","contenthashToUri","urls","uriToHttp","ensPath","i","url","isLast","response","fetch","credentials","ok","json","validationErrors","errors","memo","add","dataPath","message","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","resolverContract","resolverAddress","Contract","ensRegistrarContract","hash","namehash","resolver","contenthash","useFetchListCallback","library","ensResolver","networkLibrary","getNetworkLibrary","getNetwork","network","sendDispatch","requestId","nanoid","fetchTokenList","pending","tokenList","fulfilled","catch","rejected","errorMessage","button","ToggleElement","span","bgColor","bg4","StatusText","ListToggle","UnpaddedLinkStyledButton","LinkStyledButton","PopoverContainer","StyledMenu","StyledTitleText","active","white","StyledListUrlText","RowWrapper","listUrlRowHTMLId","replace","ListRow","listsByUrl","lists","byUrl","pendingUpdate","listColor","useListColor","useIsListActive","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","placement","strategy","modifiers","options","offset","styles","attributes","version","handleAcceptListUpdate","acceptListUpdate","handleRemoveList","window","prompt","removeList","handleEnableList","enableList","handleDisableList","disableList","mt","popper","major","minor","patch","keys","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","useAllLists","activeListUrls","useActiveListUrls","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","filter","UNSUPPORTED_LIST_URLS","includes","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","CurrencyModalView","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","useToken","userAddedTokens","useUserAddedTokens","removeToken","useRemoveUserAddedToken","handleRemoveAll","importToken","ToggleWrapper","ToggleOption","Manage","showLists","setShowLists","search","paddingBottom","ImportList","listURL","confirmed","setConfirmed","adding","loadingRequestId","handleAddList","manage","blue1","checked","CurrencySearchModal","modalView","lastOpen","prevView","usePrevious","minHeight","Modal","maxHeight","_path","StyledInput","align","text4","inputRegex","RegExp","Input","React","prependSymbol","enforcer","nextUserInput","escapeRegExp","formattedValue","inputMode","autoCorrect","pattern","minLength","maxLength","spellCheck","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDropdown","_ref","svgRef","titleId","viewBox","fill","xmlns","d","ForwardRef","InputPanel","flexColumnNoWrap","hideInput","FixedContainer","Container","CurrencySelect","ButtonGray","InputRow","LabelRow","darken","FiatRow","Aligner","StyledDropDown","DropDown","black","StyledTokenName","StyledBalanceMax","upToExtraSmall","CurrencyInputPanel","amount","sigFigs","onMax","showMaxButton","renderBalance","fiatValue","hideBalance","locked","isDown","modalOpen","setModalOpen","selectedCurrencyBalance","handleDismissSearch","label","currency0","token0","currency1","token1","val","display","equal","quotient","divide","decimalScale","FiatValue","PoolState","POOL_STATE_INTERFACE","Interface","IUniswapV3PoolStateABI","usePools","poolKeys","transformed","currencyA","currencyB","feeAmount","sortsBefore","poolAddresses","v3CoreFactoryAddress","V3_CORE_FACTORY_ADDRESSES","computePoolAddress","factoryAddress","slot0s","useMultipleContractSingleData","liquidities","_key","slot0","slot0Loading","slot0Valid","liquidityLoading","liquidityValid","LOADING","NOT_EXISTS","sqrtPriceX96","eq","EXISTS","Pool","tick","useV3SwapPools","currencyIn","currencyOut","allCurrencyCombinations","common","BASES_TO_CHECK_TRADES_AGAINST","basePairs","flatMap","base","otherBase","tmpss","t0","t1","customBases","CUSTOM_BASES","customBasesA","customBasesB","find","useAllCurrencyCombinations","concat","FeeAmount","LOW","MEDIUM","HIGH","tuple","computeAllRoutes","currentPath","allPaths","startCurrencyIn","tokenIn","tokenOut","involvesToken","outputToken","push","Route","useAllV3Routes","poolsLoading","routes","useBestV3TradeExactOut","amountOut","quoter","useV3Quoter","routesLoading","quoteExactOutInputs","encodeRouteToPath","quotesResults","useSingleContractMultipleData","currentBest","gt","bestRoute","syncing","SYNCING","VALID","Trade","createUncheckedTrade","tradeType","TradeType","EXACT_OUTPUT","inputAmount","outputAmount","NO_ROUTE_FOUND","Section","inline","BottomSection","ConfirmedIcon","ColumnCenter","StyledLogo","ConfirmationPendingContent","pendingText","Circle","TransactionSubmittedContent","currencyToAdd","useContext","ThemeContext","success","setSuccess","isMetaMask","request","method","params","image","getTokenLogoURL","useAddTokenToMetamask","TRANSACTION","MetaMaskLogo","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","marginTop","wordBreak","TransactionConfirmationModal","attemptingTxn","content","useTransactionDeadline","ttl","user","userDeadline","blockTimestamp","multicall","useMulticall2Contract","useSingleCallResult","useCurrentBlockTimestamp","debouncedName","ensNodeArgument","registrarContract","useENSRegistrarContract","resolverAddressResult","useENSResolverContract","isZero","addr","changed","useAllCommonPairs","allPairs","useV2Pairs1","PairState","curr","currencyAmountIn","allowedPairs","bestTradeExactIn","maxNumResults","bestTradeSoFar","currentTrade","isTradeBetter","BETTER_TRADE_LESS_HOPS_THRESHOLD","currencyAmountOut","bestTradeExactOut","tradeA","tradeB","minimumDelta","ZERO_PERCENT","executionPrice","asFraction","TextWrapper","link","adjustSize","HoverInlineText","maxCharacters","showHover","setShowHover","Tooltip","onMouseEnter","onMouseLeave","priceImpactColor","severity","yellow1","groupSeparator"],"mappings":"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","file":"static/js/3.312e324d.chunk.js","sourcesContent":["import { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V3Trade } from '@uniswap/v3-sdk'\nimport { Trade as V2Trade } from '@aswaporg/aswap-v2-sdk'\nimport { useMemo } from 'react'\nimport { useUserSlippageToleranceWithDefault } from '../state/user/hooks'\n\nconst V2_SWAP_DEFAULT_SLIPPAGE = new Percent(50, 10_000) // .50%\nconst V3_SWAP_DEFAULT_SLIPPAGE = new Percent(50, 10_000) // .50%\nconst ONE_TENTHS_PERCENT = new Percent(10, 10_000) // .10%\n\nexport default function useSwapSlippageTolerance(\n  trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | undefined\n): Percent {\n  const defaultSlippageTolerance = useMemo(() => {\n    if (!trade) return ONE_TENTHS_PERCENT\n    if (trade instanceof V2Trade) return V2_SWAP_DEFAULT_SLIPPAGE\n    return V3_SWAP_DEFAULT_SLIPPAGE\n  }, [trade])\n  return useUserSlippageToleranceWithDefault(defaultSlippageTolerance)\n}\n","import { t } from '@lingui/macro'\nimport JSBI from 'jsbi'\nimport { Trade as V3Trade } from '@uniswap/v3-sdk'\nimport { V3TradeState } from '../../hooks/useBestV3Trade'\nimport useENS from '../../hooks/useENS'\nimport { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, Percent, TradeType } from '@aswaporg/aswap-sdk-core'\nimport { Trade as V2Trade } from '@aswaporg/aswap-v2-sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useCurrency } from '../../hooks/Tokens'\nimport useSwapSlippageTolerance from '../../hooks/useSwapSlippageTolerance'\nimport { Version } from '../../hooks/useToggledVersion'\nimport { useV2TradeExactIn, useV2TradeExactOut } from '../../hooks/useV2Trade'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport { isAddress } from '../../utils'\nimport { AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useAppSelector((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useAppDispatch()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency.isToken ? currency.address : currency.isNative ? 'STC' : '',\n        })\n      )\n    },\n    [dispatch]\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount<T extends Currency>(value?: string, currency?: T): CurrencyAmount<T> | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return CurrencyAmount.fromRawAmount(currency, JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: { [address: string]: true } = {\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f': true, // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a': true, // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D': true, // v2 router 02\n}\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(\n  trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType>,\n  checksummedAddress: string\n): boolean {\n  const path = trade instanceof V2Trade ? trade.route.path : trade.route.tokenPath\n  return (\n    path.some((token) => token.address === checksummedAddress) ||\n    (trade instanceof V2Trade\n      ? trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n      : false)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(toggledVersion: Version): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmount: CurrencyAmount<Currency> | undefined\n  inputError?: string\n  v2Trade: V2Trade<Currency, Currency, TradeType> | undefined\n  v3TradeState: { trade: V3Trade<Currency, Currency, TradeType> | null; state: V3TradeState }\n  toggledTrade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | undefined\n  allowedSlippage: Percent\n} {\n  const { account } = useActiveWeb3React()\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestV2TradeExactIn = useV2TradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined, {\n    maxHops: singleHopOnly ? 1 : undefined,\n  })\n  const bestV2TradeExactOut = useV2TradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined, {\n    maxHops: singleHopOnly ? 1 : undefined,\n  })\n\n  // console.log(\"000\", inputCurrency, outputCurrency, bestV2TradeExactIn, bestV2TradeExactOut)\n\n  // const bestV3TradeExactIn = useBestV3TradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  // const bestV3TradeExactOut = useBestV3TradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestV2TradeExactIn : bestV2TradeExactOut\n  // const v3Trade = (isExactIn ? bestV3TradeExactIn : bestV3TradeExactOut) ?? undefined\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t`Connect Wallet`\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t`Enter an amount`\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t`Select a token`\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t`Enter a recipient`\n  } else {\n    if (\n      BAD_RECIPIENT_ADDRESSES[formattedTo] ||\n      (bestV2TradeExactIn && involvesAddress(bestV2TradeExactIn, formattedTo)) ||\n      (bestV2TradeExactOut && involvesAddress(bestV2TradeExactOut, formattedTo))\n    ) {\n      inputError = inputError ?? t`Invalid recipient`\n    }\n  }\n\n  //asdf1 swap页面展示主要是使用toggledTrade\n  // const toggledTrade = (toggledVersion === Version.v2 ? v2Trade : v3Trade.trade) ?? undefined\n  const toggledTrade = v2Trade ?? undefined\n  const allowedSlippage = useSwapSlippageTolerance(toggledTrade)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [currencyBalances[Field.INPUT], v2Trade?.maximumAmountIn(allowedSlippage)]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t`Insufficient ${amountIn.currency.symbol} balance`\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    inputError,\n    v2Trade: v2Trade ?? undefined,\n    // v3TradeState: v3Trade,\n    v3TradeState: { trade: null, state: V3TradeState.INVALID },\n    toggledTrade,\n    allowedSlippage,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'STC') return 'STC'\n  }\n  return ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === '' && outputCurrency === '') {\n    // default to STC input\n    inputCurrency = 'STC'\n  } else if (inputCurrency === outputCurrency) {\n    // clear output if identical\n    outputCurrency = ''\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] =\n    useState<{ inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined>()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: parsed.recipient,\n      })\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import JSBI from 'jsbi'\nimport { Currency, CurrencyAmount, Fraction, Percent, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@aswaporg/aswap-v2-sdk'\nimport { Trade as V3Trade } from '@uniswap/v3-sdk'\nimport {\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n} from '../constants/misc'\n\nconst THIRTY_BIPS_FEE = new Percent(JSBI.BigInt(30), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(THIRTY_BIPS_FEE)\n\n// computes realized lp fee as a percent\nexport function computeRealizedLPFeePercent(\n  trade: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType>\n): Percent {\n  let percent: Percent\n  if (trade instanceof V2Trade) {\n    // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n    // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n    percent = ONE_HUNDRED_PERCENT.subtract(\n      trade.route.pairs.reduce<Percent>(\n        (currentFee: Percent): Percent => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n        ONE_HUNDRED_PERCENT\n      )\n    )\n  } else {\n    percent = ONE_HUNDRED_PERCENT.subtract(\n      trade.route.pools.reduce<Percent>(\n        (currentFee: Percent, pool): Percent =>\n          currentFee.multiply(ONE_HUNDRED_PERCENT.subtract(new Fraction(pool.fee, 1_000_000))),\n        ONE_HUNDRED_PERCENT\n      )\n    )\n  }\n\n  return new Percent(percent.numerator, percent.denominator)\n}\n\n// computes price breakdown for the trade\nexport function computeRealizedLPFeeAmount(\n  trade?: V2Trade<Currency, Currency, TradeType> | V3Trade<Currency, Currency, TradeType> | null\n): CurrencyAmount<Currency> | undefined {\n  if (trade) {\n    const realizedLPFee = computeRealizedLPFeePercent(trade)\n\n    // the amount of the input that accrues to LPs\n    return CurrencyAmount.fromRawAmount(trade.inputAmount.currency, trade.inputAmount.multiply(realizedLPFee).quotient)\n  }\n\n  return undefined\n}\n\nconst IMPACT_TIERS = [\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n  ALLOWED_PRICE_IMPACT_LOW,\n]\n\ntype WarningSeverity = 0 | 1 | 2 | 3 | 4\nexport function warningSeverity(priceImpact: Percent | undefined): WarningSeverity {\n  if (!priceImpact) return 4\n  let impact: WarningSeverity = IMPACT_TIERS.length as WarningSeverity\n  for (const impactLevel of IMPACT_TIERS) {\n    if (impactLevel.lessThan(priceImpact)) return impact\n    impact--\n  }\n  return 0\n}\n","import { isAddress } from '../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated ? validated : undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated ? validated : lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { bcs, utils } from '@starcoin/starcoin'\nimport { arrayify, hexlify } from '@ethersproject/bytes'\nimport { useCallback } from 'react'\nimport useStarcoinProvider from './useStarcoinProvider'\nimport { TransactionPayloadVariantScriptFunction } from '@starcoin/starcoin/dist/src/lib/runtime/starcoin_types'\nimport { useTransactionExpirationSecs } from './useTransactionDeadline'\n\nconst PREFIX = '0x9bb5ace47e68616f64229b119f4c5d95::Router02::'\n\nfunction serializeU128(value: string | number): string {\n  const se = new bcs.BcsSerializer()\n  se.serializeU128(BigInt(value))\n  return hexlify(se.getBytes())\n}\n\nfunction serializeScriptFunction(scriptFunction: TransactionPayloadVariantScriptFunction) {\n  const se = new bcs.BcsSerializer()\n  scriptFunction.serialize(se)\n  return hexlify(se.getBytes())\n}\n\nexport function useRegisterSwapPair(signer?: string) {\n  const provider = useStarcoinProvider()\n  return useCallback(\n    async (x: string, y: string) => {\n      const functionId = `${PREFIX}register_swap_pair`\n      const tyArgs = utils.tx.encodeStructTypeTags([x, y])\n      const args: Uint8Array[] = []\n      const scriptFunction = utils.tx.encodeScriptFunction(functionId, tyArgs, args)\n      const transactionHash = await provider.getSigner(signer).sendUncheckedTransaction({\n        data: serializeScriptFunction(scriptFunction),\n      })\n      return transactionHash\n    },\n    [provider, signer]\n  )\n}\n\n/**\n * 通过指定换入的代币额度来置换代币\n */\nexport function useSwapExactTokenForToken(signer?: string) {\n  const provider = useStarcoinProvider()\n  const expiredSecs = useTransactionExpirationSecs()\n  return useCallback(\n    async (x: string, y: string, m: string, amount_x_in: number | string, amount_y_out_min: number | string) => {\n        // console.log(\"222\")\n      const functionId = `${PREFIX}swap_exact_token_for_token`\n      const tyArgs = utils.tx.encodeStructTypeTags([x, y, m])\n      const args = [arrayify(serializeU128(amount_x_in)), arrayify(serializeU128(amount_y_out_min))]\n        // console.log(\"222\", x, y, amount_x_in, amount_y_out_min)\n      const scriptFunction = utils.tx.encodeScriptFunction(functionId, tyArgs, args)\n      const transactionHash = await provider.getSigner(signer).sendUncheckedTransaction({\n        data: serializeScriptFunction(scriptFunction),\n        expiredSecs,\n      })\n      return transactionHash\n    },\n    [provider, signer, expiredSecs]\n  )\n}\n\n/**\n * 通过指定换出的代币额度来置换代币\n */\nexport function useSwapTokenForExactToken(signer?: string) {\n  const provider = useStarcoinProvider()\n  const expiredSecs = useTransactionExpirationSecs()\n  return useCallback(\n    async (x: string, y: string, m: string, amount_x_in_max: number | string, amount_y_out: number | string) => {\n        // console.log(\"111\")\n      const functionId = `${PREFIX}swap_token_for_exact_token`\n      const tyArgs = utils.tx.encodeStructTypeTags([x, y, m])\n      const args = [arrayify(serializeU128(amount_x_in_max)), arrayify(serializeU128(amount_y_out))]\n        // console.log(\"111\", x, y, amount_x_in_max, amount_y_out)\n      const scriptFunction = utils.tx.encodeScriptFunction(functionId, tyArgs, args)\n      const transactionHash = await provider.getSigner(signer).sendUncheckedTransaction({\n        data: serializeScriptFunction(scriptFunction),\n        expiredSecs,\n      })\n      return transactionHash\n    },\n    [provider, signer, expiredSecs]\n  )\n}\n\n/**\n * 添加流动性，需要在调用 register_swap_pair 之后才可调用\n */\nexport function useAddLiquidity(signer?: string) {\n  const provider = useStarcoinProvider()\n  const expiredSecs = useTransactionExpirationSecs()\n  return useCallback(\n    async (\n      x: string,\n      y: string,\n      amount_x_desired: number | string,\n      amount_y_desired: number | string,\n      amount_x_min: number | string,\n      amount_y_min: number | string\n    ) => {\n      const functionId = `${PREFIX}add_liquidity`\n      const tyArgs = utils.tx.encodeStructTypeTags([x, y])\n      const args = [\n        arrayify(serializeU128(amount_x_desired)),\n        arrayify(serializeU128(amount_y_desired)),\n        arrayify(serializeU128(amount_x_min)),\n        arrayify(serializeU128(amount_y_min)),\n      ]\n      // console.log(\"参数：\", amount_x_desired, amount_y_desired, amount_x_min, amount_y_min)\n      const scriptFunction = utils.tx.encodeScriptFunction(functionId, tyArgs, args)\n      const transactionHash = await provider.getSigner(signer).sendUncheckedTransaction({\n        data: serializeScriptFunction(scriptFunction),\n        expiredSecs,\n      })\n      return transactionHash\n    },\n    [provider, signer, expiredSecs]\n  )\n}\n\n/**\n * 移除流动性，需要在调用 register_swap_pair 之后才可调用\n */\nexport function useRemoveLiquidity(signer?: string) {\n  const provider = useStarcoinProvider()\n  const expiredSecs = useTransactionExpirationSecs()\n  return useCallback(\n    async (\n      x: string,\n      y: string,\n      liquidity: number | string,\n      amount_x_min: number | string,\n      amount_y_min: number | string\n    ) => {\n      const functionId = `${PREFIX}remove_liquidity`\n      const tyArgs = utils.tx.encodeStructTypeTags([x, y])\n      const args = [\n        arrayify(serializeU128(liquidity)),\n        arrayify(serializeU128(amount_x_min)),\n        arrayify(serializeU128(amount_y_min)),\n      ]\n      const scriptFunction = utils.tx.encodeScriptFunction(functionId, tyArgs, args)\n      const transactionHash = await provider.getSigner(signer).sendUncheckedTransaction({\n        data: serializeScriptFunction(scriptFunction),\n        expiredSecs,\n      })\n      return transactionHash\n    },\n    [provider, signer, expiredSecs]\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nexport const BodyWrapper = styled.div<{ margin?: string; maxWidth?: string }>`\n  position: relative;\n  margin-top: ${({ margin }) => margin ?? '0px'};\n  max-width: ${({ maxWidth }) => maxWidth ?? '480px'};\n  width: 100%;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 24px;\n  margin-top: 1rem;\n  border: 3px solid #FFFFFF;\n  background: #FFFFFF;\n  padding:0px 5px;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children, ...rest }: { children: React.ReactNode }) {\n  return <BodyWrapper {...rest}>{children}</BodyWrapper>\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nexport default function useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((last) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return last\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nexport function useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n","import { Trans } from '@lingui/macro'\nimport { Text } from 'rebass'\nimport { Currency } from '@uniswap/sdk-core'\nimport styled from 'styled-components/macro'\n\nimport { COMMON_BASES } from '../../constants/routing'\nimport { currencyId } from '../../utils/currencyId'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.bg3)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.bg2};\n  }\n\n  color: ${({ theme, disable }) => disable && theme.text3};\n  background-color: ${({ theme, disable }) => disable && theme.bg3};\n  filter: ${({ disable }) => disable && 'grayscale(1)'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: number\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const bases = typeof chainId !== 'undefined' ? COMMON_BASES[chainId] ?? [] : []\n\n  return bases.length > 0 ? (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontWeight={500} fontSize={14}>\n          <Trans>Common bases</Trans>\n        </Text>\n        <QuestionHelper text={<Trans>These tokens are commonly paired with other tokens.</Trans>} />\n      </AutoRow>\n      <AutoRow gap=\"4px\">\n        {bases.map((currency: Currency) => {\n          const isSelected = selectedCurrency?.equals(currency)\n          return (\n            <BaseWrapper\n              onClick={() => !isSelected && onSelect(currency)}\n              disable={isSelected}\n              key={currencyId(currency)}\n            >\n              <CurrencyLogo currency={currency} style={{ marginRight: 8 }} />\n              <Text fontWeight={500} fontSize={16}>\n                {currency.symbol}\n              </Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  ) : null\n}\n","import styled from 'styled-components/macro'\nimport { AutoColumn } from '../Column'\nimport { RowBetween, RowFixed } from '../Row'\n\nexport const ModalInfo = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 1rem 1rem;\n  margin: 0.25rem 0.5rem;\n  justify-content: center;\n  flex: 1;\n  user-select: none;\n`\nexport const StyledMenu = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n`\n\nexport const PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 100;\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  color: ${({ theme }) => theme.text2};\n  border-radius: 0.5rem;\n  padding: 1rem;\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-gap: 8px;\n  font-size: 1rem;\n  text-align: left;\n  top: 80px;\n`\n\nexport const TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.text2};\n  border-radius: 50%;\n`\n\nexport const FadedSpan = styled(RowFixed)`\n  color: ${({ theme }) => theme.primary1};\n  font-size: 14px;\n`\nexport const Checkbox = styled.input`\n  border: 1px solid ${({ theme }) => theme.red3};\n  height: 20px;\n  margin: 0;\n`\n\nexport const PaddedColumn = styled(AutoColumn)`\n  padding: 20px;\n`\n\nexport const MenuItem = styled(RowBetween)`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto minmax(0, 72px);\n  grid-gap: 16px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.bg2};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nexport const SearchInput = styled.input`\n  position: relative;\n  display: flex;\n  padding: 16px;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  border-radius: 20px;\n  color: ${({ theme }) => theme.text1};\n  border-style: solid;\n  border: 1px solid ${({ theme }) => theme.bg3};\n  -webkit-appearance: none;\n\n  font-size: 18px;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n  }\n  transition: border 100ms;\n  :focus {\n    border: 1px solid ${({ theme }) => theme.primary1};\n    outline: none;\n  }\n`\nexport const Separator = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg2};\n`\n\nexport const SeparatorDark = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg3};\n`\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport useHttpLocations from '../../hooks/useHttpLocations'\n\nimport Logo from '../Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { CSSProperties } from 'react'\nimport { Token } from '@uniswap/sdk-core'\nimport { AutoRow, RowFixed } from 'components/Row'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { TYPE } from 'theme'\nimport ListLogo from 'components/ListLogo'\nimport useTheme from 'hooks/useTheme'\nimport { ButtonPrimary } from 'components/Button'\nimport styled from 'styled-components/macro'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { CheckCircle } from 'react-feather'\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo'\nimport { Trans } from '@lingui/macro'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckCircle)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.green1};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  const theme = useTheme()\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  const list = token instanceof WrappedTokenInfo ? token.list : undefined\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size={'24px'} style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <TYPE.body fontWeight={500}>{token.symbol}</TYPE.body>\n          <TYPE.darkGray ml=\"8px\" fontWeight={300}>\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </TYPE.darkGray>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <TYPE.small mr=\"4px\" color={theme.text3}>\n              <Trans>via {list.name} </Trans>\n            </TYPE.small>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <ButtonPrimary\n          width=\"fit-content\"\n          padding=\"6px 12px\"\n          fontWeight={500}\n          fontSize=\"14px\"\n          onClick={() => {\n            setImportToken && setImportToken(token)\n            showImportView()\n          }}\n        >\n          <Trans>Import</Trans>\n        </ButtonPrimary>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <TYPE.main color={theme.green1}>\n            <Trans>Active</Trans>\n          </TYPE.main>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/tokenlist.831c6277.svg\";","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport styled from 'styled-components/macro'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { TYPE } from '../../theme'\nimport { useIsUserAddedToken } from '../../hooks/Tokens'\nimport Column from '../Column'\nimport { RowFixed, RowBetween } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { MouseoverTooltip } from '../Tooltip'\nimport { MenuItem } from './styleds'\nimport Loader from '../Loader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\nimport { LightGreyCard } from 'components/Card'\nimport TokenListLogo from '../../assets/svg/tokenlist.svg'\nimport QuestionHelper from 'components/QuestionHelper'\nimport useTheme from 'hooks/useTheme'\n\nfunction currencyKey(currency: Currency): string {\n  return currency.isToken ? currency.address : 'ETHER'\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst Tag = styled.div`\n  background-color: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.text2};\n  font-size: 14px;\n  border-radius: 4px;\n  padding: 0.25rem 0.3rem 0.25rem 0.3rem;\n  max-width: 6rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  justify-self: flex-end;\n  margin-right: 4px;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount<Currency> }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst TagContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst TokenListLogoWrapper = styled.img`\n  height: 20px;\n`\n\nfunction TokenTags({ currency }: { currency: Currency }) {\n  if (!(currency instanceof WrappedTokenInfo)) {\n    return <span />\n  }\n\n  const tags = currency.tags\n  if (!tags || tags.length === 0) return <span />\n\n  const tag = tags[0]\n\n  return (\n    <TagContainer>\n      <MouseoverTooltip text={tag.description}>\n        <Tag key={tag.id}>{tag.name}</Tag>\n      </MouseoverTooltip>\n      {tags.length > 1 ? (\n        <MouseoverTooltip\n          text={tags\n            .slice(1)\n            .map(({ name, description }) => `${name}: ${description}`)\n            .join('; \\n')}\n        >\n          <Tag>...</Tag>\n        </MouseoverTooltip>\n      ) : null}\n    </TagContainer>\n  )\n}\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n  showCurrencyAmount,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n  showCurrencyAmount?: boolean\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency.isToken ? currency : undefined)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size={'24px'} />\n      <Column>\n        <Text title={currency.name} fontWeight={500}>\n          {currency.symbol}\n        </Text>\n        <TYPE.darkGray ml=\"0px\" fontSize={'12px'} fontWeight={300}>\n          {!currency.isNative && !isOnSelectedList && customAdded ? (\n            <Trans>{currency.name} • Added by user</Trans>\n          ) : (\n            currency.name\n          )}\n        </TYPE.darkGray>\n      </Column>\n      <TokenTags currency={currency} />\n      {showCurrencyAmount && (\n        <RowFixed style={{ justifySelf: 'flex-end' }}>\n          {balance ? <Balance balance={balance} /> : account ? <Loader /> : null}\n        </RowFixed>\n      )}\n    </MenuItem>\n  )\n}\n\nconst BREAK_LINE = 'BREAK'\ntype BreakLine = typeof BREAK_LINE\nfunction isBreakLine(x: unknown): x is BreakLine {\n  return x === BREAK_LINE\n}\n\nfunction BreakLineComponent({ style }: { style: CSSProperties }) {\n  const theme = useTheme()\n  return (\n    <FixedContentRow style={style}>\n      <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n        <RowBetween>\n          <RowFixed>\n            <TokenListLogoWrapper src={TokenListLogo} />\n            <TYPE.main ml=\"6px\" fontSize=\"12px\" color={theme.text1}>\n              <Trans>Expanded results from inactive Token Lists</Trans>\n            </TYPE.main>\n          </RowFixed>\n          <QuestionHelper\n            text={\n              <Trans>\n                Tokens from inactive lists. Import specific tokens below or click Manage to activate more lists.\n              </Trans>\n            }\n          />\n        </RowBetween>\n      </LightGreyCard>\n    </FixedContentRow>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  otherListTokens,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showImportView,\n  setImportToken,\n  showCurrencyAmount,\n}: {\n  height: number\n  currencies: Currency[]\n  otherListTokens?: WrappedTokenInfo[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  showCurrencyAmount?: boolean\n}) {\n  const itemData: (Currency | BreakLine)[] = useMemo(() => {\n    if (otherListTokens && otherListTokens?.length > 0) {\n      return [...currencies, BREAK_LINE, ...otherListTokens]\n    }\n    return currencies\n  }, [currencies, otherListTokens])\n\n  const Row = useCallback(\n    function TokenRow({ data, index, style }) {\n      const row: Currency | BreakLine = data[index]\n\n      if (isBreakLine(row)) {\n        return <BreakLineComponent style={style} />\n      }\n\n      const currency = row\n\n      const isSelected = Boolean(currency && selectedCurrency && selectedCurrency.equals(currency))\n      const otherSelected = Boolean(currency && otherCurrency && otherCurrency.equals(currency))\n      const handleSelect = () => currency && onCurrencySelect(currency)\n\n      const token = currency?.wrapped\n\n      const showImport = index > currencies.length\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      } else if (currency) {\n        return (\n          <CurrencyRow\n            style={style}\n            currency={currency}\n            isSelected={isSelected}\n            onSelect={handleSelect}\n            otherSelected={otherSelected}\n            showCurrencyAmount={showCurrencyAmount}\n          />\n        )\n      } else {\n        return null\n      }\n    },\n    [\n      currencies.length,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      showCurrencyAmount,\n    ]\n  )\n\n  const itemKey = useCallback((index: number, data: typeof itemData) => {\n    const currency = data[index]\n    if (isBreakLine(currency)) return BREAK_LINE\n    return currencyKey(currency)\n  }, [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { useCallback, useState } from 'react'\n\nexport default function useToggle(initialState = false): [boolean, () => void] {\n  const [state, setState] = useState(initialState)\n  const toggle = useCallback(() => setState((state) => !state), [])\n  return [state, toggle]\n}\n","import { Currency, Token } from '@uniswap/sdk-core'\nimport { Currency as CurrencyNew, Token as TokenNew } from '@aswaporg/aswap-sdk-core'\nimport { KeyboardEvent, RefObject, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { t, Trans } from '@lingui/macro'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport {ExtendedStar, STC} from '../../constants/tokens'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport {\n  useAllTokens,\n  useToken,\n  useIsUserAddedToken,\n  useSearchInactiveTokenLists,\n  useToken1,\n} from '../../hooks/Tokens'\nimport { CloseIcon, TYPE, ButtonText, IconWrapper } from '../../theme'\nimport {isAddress, toLowerCaseAddress} from '../../utils'\nimport Column from '../Column'\nimport Row, { RowBetween, RowFixed } from '../Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport {filterTokens, useSortedTokensByQuery} from './filtering'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport styled from 'styled-components/macro'\nimport useToggle from 'hooks/useToggle'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport useTheme from 'hooks/useTheme'\nimport ImportRow from './ImportRow'\nimport { Edit } from 'react-feather'\nimport useDebounce from 'hooks/useDebounce'\nimport {\n  useTokenDecimals,\n  useTokenDecimals1,\n  useTokenDecimals2,\n  useTokenDecimals3\n} from \"../../hooks/useTokenSwapRouter\";\nimport {Field} from \"../../state/mint/actions\";\n\nconst ContentWrapper = styled(Column)`\n  width: 100%;\n  flex: 1 1;\n  position: relative;\n`\n\nconst Footer = styled.div`\n  width: 100%;\n  border-radius: 20px;\n  padding: 20px;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  background-color: ${({ theme }) => theme.bg1};\n  border-top: 1px solid ${({ theme }) => theme.bg2};\n`\n\ninterface CurrencySearchProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showCurrencyAmount?: boolean\n  disableNonToken?: boolean\n  showManageView: () => void\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nexport default function CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showCurrencyAmount,\n  disableNonToken,\n  onDismiss,\n  isOpen,\n  showManageView,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { chainId } = useActiveWeb3React()\n  const theme = useTheme()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  const [searchToken, setSearchToken] = useState<TokenNew|undefined>(undefined);\n\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(debouncedQuery)\n\n  // let searchToken = useToken1(debouncedQuery)\n\n  // const {data:searchToken} = useTokenDecimals2(debouncedQuery)\n\n  const asyncSearchToken = useTokenDecimals3(debouncedQuery);\n  asyncSearchToken.then((sss)=> {\n    setSearchToken(sss)\n  })\n\n  useEffect(() => {\n    if (isAddressSearch) {\n\n    }\n  }, [isAddressSearch])\n\n  // const searchToken = useTokenDecimals3(debouncedQuery)\n\n  // const data = useTokenDecimals1(searchQuery)\n\n  console.log(\"data\")\n\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  //asdf1 过滤token\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), toLowerCaseAddress(debouncedQuery))\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  //asdf1 排序token\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const star = useMemo(() => chainId && ExtendedStar.onChain(chainId), [chainId])\n\n  const filteredSortedTokensWithSTC: Currency[] = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    if (s === '' || s === 's' || s === 'st' || s === 'stc') {\n      return star ? [star, ...filteredSortedTokens] : filteredSortedTokens\n    }\n    return filteredSortedTokens\n  }, [debouncedQuery, star, filteredSortedTokens])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    // console.log(\"sss\")\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'stc' && star) {\n          handleCurrencySelect(star)\n        } else if (filteredSortedTokensWithSTC.length > 0) {\n          if (filteredSortedTokensWithSTC.length > 0) {\n            if (\n              filteredSortedTokensWithSTC[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n              filteredSortedTokensWithSTC.length === 1\n            ) {\n              handleCurrencySelect(filteredSortedTokensWithSTC[0])\n            }\n          }\n        }\n      }\n    },\n    [debouncedQuery, star, filteredSortedTokensWithSTC, handleCurrencySelect]\n  )\n\n  // menu ui\n  const [open, toggle] = useToggle(false)\n  const node = useRef<HTMLDivElement>()\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  // if no results on main list, show option to expand into inactive\n  const filteredInactiveTokens = useSearchInactiveTokenLists(\n    filteredTokens.length === 0 || (debouncedQuery.length > 2 && !isAddressSearch) ? debouncedQuery : undefined\n  )\n\n  return (\n    <ContentWrapper>\n      <PaddedColumn gap=\"16px\">\n        <RowBetween>\n          <Text fontWeight={500} fontSize={16}>\n            <Trans>Select a token</Trans>\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <Row>\n          <SearchInput\n            type=\"text\"\n            id=\"token-search-input\"\n            placeholder={t`Search name or paste address`}\n            autoComplete=\"off\"\n            value={searchQuery}\n            ref={inputRef as RefObject<HTMLInputElement>}\n            onChange={handleInput}\n            onKeyDown={handleEnter}\n          />\n        </Row>\n        {showCommonBases && (\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n        )}\n      </PaddedColumn>\n      <Separator />\n      {searchToken && !searchTokenIsAdded ? (\n        <Column style={{ padding: '20px 0', height: '100%' }}>\n          <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n        </Column>\n      ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n        <div style={{ flex: '1' }}>\n          <AutoSizer disableWidth>\n            {({ height }) => (\n              <CurrencyList\n                height={height}\n                currencies={disableNonToken ? filteredSortedTokens : filteredSortedTokensWithSTC}\n                otherListTokens={filteredInactiveTokens}\n                onCurrencySelect={handleCurrencySelect}\n                otherCurrency={otherSelectedCurrency}\n                selectedCurrency={selectedCurrency}\n                fixedListRef={fixedList}\n                showImportView={showImportView}\n                setImportToken={setImportToken}\n                showCurrencyAmount={showCurrencyAmount}\n              />\n            )}\n          </AutoSizer>\n        </div>\n      ) : (\n        <Column style={{ padding: '20px', height: '100%' }}>\n          <TYPE.main color={theme.text3} textAlign=\"center\" mb=\"20px\">\n            <Trans>No results found.</Trans>\n          </TYPE.main>\n        </Column>\n      )}\n      <Footer>\n        <Row justify=\"center\">\n          <ButtonText onClick={showManageView} color={theme.primary1} className=\"list-token-manage-button\">\n            <RowFixed>\n              <IconWrapper size=\"16px\" marginRight=\"6px\" stroke={theme.primaryText1}>\n                <Edit />\n              </IconWrapper>\n              <TYPE.main color={theme.primaryText1}>\n                <Trans>Manage Token Lists</Trans>\n              </TYPE.main>\n            </RowFixed>\n          </ButtonText>\n        </Row>\n      </Footer>\n    </ContentWrapper>\n  )\n}\n","import { Token, CurrencyAmount, Currency } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: CurrencyAmount<Currency>, balanceB?: CurrencyAmount<Currency>) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  } else if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  } else if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: CurrencyAmount<Currency> | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    } else {\n      return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n    }\n  }\n}\n\nexport function useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    } else {\n      return comparator\n    }\n  }, [inverted, comparator])\n}\n","import { TokenList } from '@uniswap/token-lists/dist/types'\nimport { Token, Currency } from '@uniswap/sdk-core'\nimport styled from 'styled-components/macro'\nimport { TYPE, CloseIcon } from 'theme'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween, RowFixed } from 'components/Row'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { ArrowLeft, AlertCircle } from 'react-feather'\nimport { transparentize } from 'polished'\nimport useTheme from 'hooks/useTheme'\nimport { ButtonPrimary } from 'components/Button'\nimport { SectionBreak } from 'components/swap/styleds'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { ExternalLink } from '../../theme/components'\nimport ListLogo from 'components/ListLogo'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { PaddedColumn } from './styleds'\nimport { Plural, Trans } from '@lingui/macro'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: auto;\n`\n\nconst WarningWrapper = styled(Card)<{ highWarning: boolean }>`\n  background-color: ${({ theme, highWarning }) =>\n    highWarning ? transparentize(0.8, theme.red1) : transparentize(0.8, theme.yellow2)};\n  width: fit-content;\n`\n\nconst AddressText = styled(TYPE.blue)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 10px;\n`}\n`\n\ninterface ImportProps {\n  tokens: Token[]\n  list?: TokenList\n  onBack?: () => void\n  onDismiss?: () => void\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nexport function ImportToken({ tokens, list, onBack, onDismiss, handleCurrencySelect }: ImportProps) {\n  const theme = useTheme()\n\n  const { chainId } = useActiveWeb3React()\n\n  const addToken = useAddUserToken()\n\n  return (\n    <Wrapper>\n      <PaddedColumn gap=\"14px\" style={{ width: '100%', flex: '1 1' }}>\n        <RowBetween>\n          {onBack ? <ArrowLeft style={{ cursor: 'pointer' }} onClick={onBack} /> : <div />}\n          <TYPE.mediumHeader>\n            <Plural value={tokens.length} one=\"Import token\" other=\"Import tokens\" />\n          </TYPE.mediumHeader>\n          {onDismiss ? <CloseIcon onClick={onDismiss} /> : <div />}\n        </RowBetween>\n      </PaddedColumn>\n      <SectionBreak />\n      <AutoColumn gap=\"md\" style={{ marginBottom: '32px', padding: '1rem' }}>\n        <AutoColumn justify=\"center\" style={{ textAlign: 'center', gap: '16px', padding: '1rem' }}>\n          <AlertCircle size={48} stroke={theme.text2} strokeWidth={1} />\n          <TYPE.body fontWeight={400} fontSize={16}>\n            <Trans>\n              This token doesn&apos;t appear on the active token list(s). Make sure this is the token that you want to\n              trade.\n            </Trans>\n          </TYPE.body>\n        </AutoColumn>\n        {tokens.map((token) => {\n          return (\n            <Card\n              backgroundColor={theme.bg2}\n              key={'import' + token.address}\n              className=\".token-warning-container\"\n              padding=\"2rem\"\n            >\n              <AutoColumn gap=\"10px\" justify=\"center\">\n                <CurrencyLogo currency={token} size={'32px'} />\n\n                <AutoColumn gap=\"4px\" justify=\"center\">\n                  <TYPE.body ml=\"8px\" mr=\"8px\" fontWeight={500} fontSize={20}>\n                    {token.symbol}\n                  </TYPE.body>\n                  <TYPE.darkGray fontWeight={400} fontSize={14}>\n                    {token.name}\n                  </TYPE.darkGray>\n                </AutoColumn>\n                {chainId && (\n                  <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\n                    <AddressText fontSize={12}>{token.address}</AddressText>\n                  </ExternalLink>\n                )}\n                {list !== undefined ? (\n                  <RowFixed>\n                    {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"16px\" />}\n                    <TYPE.small ml=\"6px\" fontSize={14} color={theme.text3}>\n                      <Trans>via {list.name} token list</Trans>\n                    </TYPE.small>\n                  </RowFixed>\n                ) : (\n                  <WarningWrapper borderRadius=\"4px\" padding=\"4px\" highWarning={true}>\n                    <RowFixed>\n                      <AlertCircle stroke={theme.red1} size=\"10px\" />\n                      <TYPE.body color={theme.red1} ml=\"4px\" fontSize=\"10px\" fontWeight={500}>\n                        <Trans>Unknown Source</Trans>\n                      </TYPE.body>\n                    </RowFixed>\n                  </WarningWrapper>\n                )}\n              </AutoColumn>\n            </Card>\n          )\n        })}\n\n        <ButtonPrimary\n          altDisabledStyle={true}\n          borderRadius=\"20px\"\n          padding=\"10px 1rem\"\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            handleCurrencySelect && handleCurrencySelect(tokens[0])\n          }}\n          className=\".token-dismiss-button\"\n        >\n          <Trans>Import</Trans>\n        </ButtonPrimary>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n","import { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.debug(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.debug('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url, { credentials: 'omit' })\n    } catch (error) {\n      console.debug('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${error.dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\n\nimport { getNetworkLibrary } from '../connectors'\nimport { useAppDispatch } from 'state/hooks'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/resolveENSContentHash'\nimport { useActiveWeb3React } from './web3'\n\nexport function useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { chainId, library } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n\n  const ensResolver = useCallback(\n    async (ensName: string) => {\n      if (!library || chainId !== 1) {\n        const networkLibrary = getNetworkLibrary()\n        const network = await networkLibrary.getNetwork()\n        if (networkLibrary && network.chainId === 1) {\n          return resolveENSContentHash(ensName, networkLibrary)\n        }\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library]\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      sendDispatch && dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          sendDispatch && dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          return tokenList\n        })\n        .catch((error) => {\n          console.debug(`Failed to get list at url ${listUrl}`, error)\n          sendDispatch && dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          throw error\n        })\n    },\n    [dispatch, ensResolver]\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport styled from 'styled-components/macro'\nimport { TYPE } from '../../theme'\n\nconst Wrapper = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  border-radius: 20px;\n  border: none;\n  background: ${({ theme }) => theme.bg1};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0.4rem 0.4rem;\n  align-items: center;\n`\n\nconst ToggleElement = styled.span<{ isActive?: boolean; bgColor?: string }>`\n  border-radius: 50%;\n  height: 24px;\n  width: 24px;\n  background-color: ${({ isActive, bgColor, theme }) => (isActive ? bgColor : theme.bg4)};\n  :hover {\n    opacity: 0.8;\n  }\n`\n\nconst StatusText = styled(TYPE.main)<{ isActive?: boolean }>`\n  margin: 0 10px;\n  width: 24px;\n  color: ${({ theme, isActive }) => (isActive ? theme.text1 : theme.text3)};\n`\n\nexport interface ToggleProps {\n  id?: string\n  isActive: boolean\n  bgColor: string\n  toggle: () => void\n}\n\nexport default function ListToggle({ id, isActive, bgColor, toggle }: ToggleProps) {\n  return (\n    <Wrapper id={id} isActive={isActive} onClick={toggle}>\n      {isActive && (\n        <StatusText fontWeight=\"600\" margin=\"0 6px\" isActive={true}>\n          <Trans>ON</Trans>\n        </StatusText>\n      )}\n      <ToggleElement isActive={isActive} bgColor={bgColor} />\n      {!isActive && (\n        <StatusText fontWeight=\"600\" margin=\"0 6px\" isActive={false}>\n          <Trans>OFF</Trans>\n        </StatusText>\n      )}\n    </Wrapper>\n  )\n}\n","import { memo, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Settings, CheckCircle } from 'react-feather'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components/macro'\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\nimport { TokenList } from '@uniswap/token-lists'\nimport { t, Trans } from '@lingui/macro'\n\nimport useToggle from '../../hooks/useToggle'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport { ExternalLink, LinkStyledButton, TYPE, IconWrapper } from '../../theme'\nimport listVersionLabel from '../../utils/listVersionLabel'\nimport { parseENSAddress } from '../../utils/parseENSAddress'\nimport uriToHttp from '../../utils/uriToHttp'\nimport { ButtonEmpty, ButtonPrimary } from '../Button'\n\nimport Column, { AutoColumn } from '../Column'\nimport ListLogo from '../ListLogo'\nimport Row, { RowFixed, RowBetween } from '../Row'\nimport { PaddedColumn, SearchInput, Separator, SeparatorDark } from './styleds'\nimport { useListColor } from 'hooks/useColor'\nimport useTheme from '../../hooks/useTheme'\nimport ListToggle from '../Toggle/ListToggle'\nimport Card from 'components/Card'\nimport { CurrencyModalView } from './CurrencySearchModal'\nimport { UNSUPPORTED_LIST_URLS } from 'constants/lists'\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst UnpaddedLinkStyledButton = styled(LinkStyledButton)`\n  padding: 0;\n  font-size: 1rem;\n  opacity: ${({ disabled }) => (disabled ? '0.4' : '1')};\n`\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 100;\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  color: ${({ theme }) => theme.text2};\n  border-radius: 0.5rem;\n  padding: 1rem;\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-gap: 8px;\n  font-size: 1rem;\n  text-align: left;\n`\n\nconst StyledMenu = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n`\n\nconst StyledTitleText = styled.div<{ active: boolean }>`\n  font-size: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 600;\n  color: ${({ theme, active }) => (active ? theme.white : theme.text2)};\n`\n\nconst StyledListUrlText = styled(TYPE.main)<{ active: boolean }>`\n  font-size: 12px;\n  color: ${({ theme, active }) => (active ? theme.white : theme.text2)};\n`\n\nconst RowWrapper = styled(Row)<{ bgColor: string; active: boolean }>`\n  background-color: ${({ bgColor, active, theme }) => (active ? bgColor ?? 'transparent' : theme.bg2)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useAppSelector((state) => state.lists.byUrl)\n  const dispatch = useAppDispatch()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const theme = useTheme()\n  const listColor = useListColor(list?.logoURI)\n  const isActive = useIsListActive(listUrl)\n\n  const [open, toggle] = useToggle(false)\n  const node = useRef<HTMLDivElement>()\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>()\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>()\n\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: 'auto',\n    strategy: 'fixed',\n    modifiers: [{ name: 'offset', options: { offset: [8, 8] } }],\n  })\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    if (window.prompt(`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} bgColor={listColor} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <StyledTitleText active={isActive}>{list.name}</StyledTitleText>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <StyledListUrlText active={isActive} mr=\"6px\">\n            <Trans>{list.tokens.length} tokens</Trans>\n          </StyledListUrlText>\n          <StyledMenu ref={node as any}>\n            <ButtonEmpty onClick={toggle} ref={setReferenceElement} padding=\"0\">\n              <Settings stroke={isActive ? theme.bg1 : theme.text1} size={12} />\n            </ButtonEmpty>\n            {open && (\n              <PopoverContainer show={true} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n                <div>{list && listVersionLabel(list.version)}</div>\n                <SeparatorDark />\n                <ExternalLink href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n                  <Trans>View list</Trans>\n                </ExternalLink>\n                <UnpaddedLinkStyledButton onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n                  <Trans>Remove list</Trans>\n                </UnpaddedLinkStyledButton>\n                {pending && (\n                  <UnpaddedLinkStyledButton onClick={handleAcceptListUpdate}>\n                    <Trans>Update list</Trans>\n                  </UnpaddedLinkStyledButton>\n                )}\n              </PopoverContainer>\n            )}\n          </StyledMenu>\n        </RowFixed>\n      </Column>\n      <ListToggle\n        isActive={isActive}\n        bgColor={listColor}\n        toggle={() => {\n          isActive ? handleDisableList() : handleEnableList()\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem;\n  height: 100%;\n  overflow: auto;\n  padding-bottom: 80px;\n`\n\nexport function ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const theme = useTheme()\n\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !Boolean(UNSUPPORTED_LIST_URLS.includes(listUrl))\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError(t`Error importing list`))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      listUrlInput !== '' && setAddError(t`Enter valid list location`)\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <PaddedColumn gap=\"14px\">\n        <Row>\n          <SearchInput\n            type=\"text\"\n            id=\"list-add-input\"\n            placeholder={t`https:// or ipfs:// or ENS name`}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <TYPE.error title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }} error>\n            {addError}\n          </TYPE.error>\n        ) : null}\n      </PaddedColumn>\n      {tempList && (\n        <PaddedColumn style={{ paddingTop: 0 }}>\n          <Card backgroundColor={theme.bg2} padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <TYPE.body fontWeight={600}>{tempList.name}</TYPE.body>\n                  <TYPE.main fontSize={'12px'}>\n                    <Trans>{tempList.tokens.length} tokens</Trans>\n                  </TYPE.main>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <IconWrapper stroke={theme.text2} size=\"16px\" marginRight={'10px'}>\n                    <CheckCircle />\n                  </IconWrapper>\n                  <TYPE.body color={theme.text2}>\n                    <Trans>Loaded</Trans>\n                  </TYPE.body>\n                </RowFixed>\n              ) : (\n                <ButtonPrimary\n                  style={{ fontSize: '14px' }}\n                  padding=\"6px 8px\"\n                  width=\"fit-content\"\n                  onClick={handleImport}\n                >\n                  <Trans>Import</Trans>\n                </ButtonPrimary>\n              )}\n            </RowBetween>\n          </Card>\n        </PaddedColumn>\n      )}\n      <Separator />\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n","import { Version } from '@uniswap/token-lists'\n\nexport default function listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n","import { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport Column from 'components/Column'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { PaddedColumn, Separator, SearchInput } from './styleds'\nimport Row, { RowBetween, RowFixed } from 'components/Row'\nimport { TYPE, ExternalLinkIcon, TrashIcon, ButtonText, ExternalLink } from 'theme'\nimport { useToken } from 'hooks/Tokens'\nimport styled from 'styled-components/macro'\nimport { useUserAddedTokens, useRemoveUserAddedToken } from 'state/user/hooks'\nimport { Token } from '@uniswap/sdk-core'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { isAddress } from 'utils'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport Card from 'components/Card'\nimport ImportRow from './ImportRow'\nimport useTheme from '../../hooks/useTheme'\nimport { Trans } from '@lingui/macro'\n\nimport { CurrencyModalView } from './CurrencySearchModal'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 80px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  border-radius: 20px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  border-top: 1px solid ${({ theme }) => theme.bg3};\n  padding: 20px;\n  text-align: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const theme = useTheme()\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(searchQuery)\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size={'20px'} />\n            <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\n              <TYPE.main ml={'10px'} fontWeight={600}>\n                {token.symbol}\n              </TYPE.main>\n            </ExternalLink>\n          </RowFixed>\n          <RowFixed>\n            <TrashIcon onClick={() => removeToken(chainId, token.address)} />\n            <ExternalLinkIcon href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', height: '100%', flex: '1 1' }}>\n        <PaddedColumn gap=\"14px\">\n          <Row>\n            <SearchInput\n              type=\"text\"\n              id=\"token-search-input\"\n              placeholder={'0x0000'}\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n            />\n          </Row>\n          {searchQuery !== '' && !isAddressSearch && (\n            <TYPE.error error={true}>\n              <Trans>Enter valid token address</Trans>\n            </TYPE.error>\n          )}\n          {searchToken && (\n            <Card backgroundColor={theme.bg2} padding=\"10px 0\">\n              <ImportRow\n                token={searchToken}\n                showImportView={() => setModalView(CurrencyModalView.importToken)}\n                setImportToken={setImportToken}\n                style={{ height: 'fit-content' }}\n              />\n            </Card>\n          )}\n        </PaddedColumn>\n        <Separator />\n        <PaddedColumn gap=\"lg\" style={{ overflow: 'auto', marginBottom: '10px' }}>\n          <RowBetween>\n            <TYPE.main fontWeight={600}>\n              <Trans>{userAddedTokens?.length} Custom Tokens</Trans>\n            </TYPE.main>\n            {userAddedTokens.length > 0 && (\n              <ButtonText onClick={handleRemoveAll}>\n                <TYPE.blue>\n                  <Trans>Clear all</Trans>\n                </TYPE.blue>\n              </ButtonText>\n            )}\n          </RowBetween>\n          {tokenList}\n        </PaddedColumn>\n      </Column>\n      <Footer>\n        <TYPE.darkGray>\n          <Trans>Tip: Custom tokens are stored locally in your browser</Trans>\n        </TYPE.darkGray>\n      </Footer>\n    </Wrapper>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { useState } from 'react'\nimport { PaddedColumn, Separator } from './styleds'\nimport { RowBetween } from 'components/Row'\nimport { ArrowLeft } from 'react-feather'\nimport { Text } from 'rebass'\nimport { CloseIcon } from 'theme'\nimport styled from 'styled-components/macro'\nimport { Token } from '@uniswap/sdk-core'\nimport { ManageLists } from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { TokenList } from '@uniswap/token-lists'\nimport { CurrencyModalView } from './CurrencySearchModal'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  position: relative;\n  padding-bottom: 80px;\n`\n\nconst ToggleWrapper = styled(RowBetween)`\n  background-color: ${({ theme }) => theme.bg3};\n  border-radius: 12px;\n  padding: 6px;\n`\n\nconst ToggleOption = styled.div<{ active?: boolean }>`\n  width: 48%;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 12px;\n  font-weight: 600;\n  background-color: ${({ theme, active }) => (active ? theme.bg1 : theme.bg3)};\n  color: ${({ theme, active }) => (active ? theme.text1 : theme.text2)};\n  user-select: none;\n\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nexport default function Manage({\n  onDismiss,\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  onDismiss: () => void\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  // toggle between tokens and lists\n  const [showLists, setShowLists] = useState(true)\n\n  return (\n    <Wrapper>\n      <PaddedColumn>\n        <RowBetween>\n          <ArrowLeft style={{ cursor: 'pointer' }} onClick={() => setModalView(CurrencyModalView.search)} />\n          <Text fontWeight={500} fontSize={20}>\n            <Trans>Manage</Trans>\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n      </PaddedColumn>\n      <Separator />\n      <PaddedColumn style={{ paddingBottom: 0 }}>\n        <ToggleWrapper>\n          <ToggleOption onClick={() => setShowLists(!showLists)} active={showLists}>\n            <Trans>Lists</Trans>\n          </ToggleOption>\n          <ToggleOption onClick={() => setShowLists(!showLists)} active={!showLists}>\n            <Trans>Tokens</Trans>\n          </ToggleOption>\n        </ToggleWrapper>\n      </PaddedColumn>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </Wrapper>\n  )\n}\n","import { Currency, Token } from '@uniswap/sdk-core'\nimport { useCallback, useEffect, useState } from 'react'\nimport useLast from '../../hooks/useLast'\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo'\nimport Modal from '../Modal'\nimport  CurrencySearch  from './CurrencySearch'\nimport { ImportToken } from './ImportToken'\nimport usePrevious from 'hooks/usePrevious'\nimport Manage from './Manage'\nimport { TokenList } from '@uniswap/token-lists'\nimport { ImportList } from './ImportList'\n\ninterface CurrencySearchModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showCurrencyAmount?: boolean\n  disableNonToken?: boolean\n}\n\nexport enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n  showCurrencyAmount = true,\n  disableNonToken = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.manage)\n  const lastOpen = useLast(isOpen)\n\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setModalView(CurrencyModalView.search)\n    }\n  }, [isOpen, lastOpen])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  // change min height if not searching\n  const minHeight = modalView === CurrencyModalView.importToken || modalView === CurrencyModalView.importList ? 40 : 80\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={80} minHeight={minHeight}>\n      {modalView === CurrencyModalView.search ? (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={showCommonBases}\n          showCurrencyAmount={showCurrencyAmount}\n          disableNonToken={disableNonToken}\n          showImportView={() => setModalView(CurrencyModalView.importToken)}\n          setImportToken={setImportToken}\n          showManageView={() => setModalView(CurrencyModalView.manage)}\n        />\n      ) : modalView === CurrencyModalView.importToken && importToken ? (\n        <ImportToken\n          tokens={[importToken]}\n          onDismiss={onDismiss}\n          list={importToken instanceof WrappedTokenInfo ? importToken.list : undefined}\n          onBack={() =>\n            setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search)\n          }\n          handleCurrencySelect={handleCurrencySelect}\n        />\n      ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n        <ImportList list={importList} listURL={listURL} onDismiss={onDismiss} setModalView={setModalView} />\n      ) : modalView === CurrencyModalView.manage ? (\n        <Manage\n          onDismiss={onDismiss}\n          setModalView={setModalView}\n          setImportToken={setImportToken}\n          setImportList={setImportList}\n          setListUrl={setListUrl}\n        />\n      ) : (\n        ''\n      )}\n    </Modal>\n  )\n}\n","import { useState, useCallback } from 'react'\nimport styled from 'styled-components/macro'\nimport { TYPE, CloseIcon } from 'theme'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween, RowFixed, AutoRow } from 'components/Row'\nimport { ArrowLeft, AlertTriangle } from 'react-feather'\nimport useTheme from 'hooks/useTheme'\nimport { transparentize } from 'polished'\nimport { ButtonPrimary } from 'components/Button'\nimport { SectionBreak } from 'components/swap/styleds'\nimport { ExternalLink } from '../../theme/components'\nimport ListLogo from 'components/ListLogo'\nimport { PaddedColumn, Checkbox, TextDot } from './styleds'\nimport { TokenList } from '@uniswap/token-lists'\n\nimport { useAppDispatch } from 'state/hooks'\nimport { useFetchListCallback } from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { CurrencyModalView } from './CurrencySearchModal'\nimport { useAllLists } from 'state/lists/hooks'\nimport { Trans } from '@lingui/macro'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: auto;\n`\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onDismiss: () => void\n  setModalView: (view: CurrencyModalView) => void\n}\n\nexport function ImportList({ listURL, list, setModalView, onDismiss }: ImportProps) {\n  const theme = useTheme()\n  const dispatch = useAppDispatch()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n\n        // turn list on\n        dispatch(enableList(listURL))\n        // go back to lists\n        setModalView(CurrencyModalView.manage)\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, setModalView])\n\n  return (\n    <Wrapper>\n      <PaddedColumn gap=\"14px\" style={{ width: '100%', flex: '1 1' }}>\n        <RowBetween>\n          <ArrowLeft style={{ cursor: 'pointer' }} onClick={() => setModalView(CurrencyModalView.manage)} />\n          <TYPE.mediumHeader>\n            <Trans>Import List</Trans>\n          </TYPE.mediumHeader>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n      </PaddedColumn>\n      <SectionBreak />\n      <PaddedColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card backgroundColor={theme.bg2} padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <TYPE.body fontWeight={600} mr=\"6px\">\n                      {list.name}\n                    </TYPE.body>\n                    <TextDot />\n                    <TYPE.main fontSize={'16px'} ml=\"6px\">\n                      <Trans>{list.tokens.length} tokens</Trans>\n                    </TYPE.main>\n                  </RowFixed>\n                  <ExternalLink href={`https://tokenlists.org/token-list?url=${listURL}`}>\n                    <TYPE.main fontSize={'12px'} color={theme.blue1}>\n                      {listURL}\n                    </TYPE.main>\n                  </ExternalLink>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n          <Card style={{ backgroundColor: transparentize(0.8, theme.red1) }}>\n            <AutoColumn justify=\"center\" style={{ textAlign: 'center', gap: '16px', marginBottom: '12px' }}>\n              <AlertTriangle stroke={theme.red1} size={32} />\n              <TYPE.body fontWeight={500} fontSize={20} color={theme.red1}>\n                <Trans>Import at your own risk</Trans>\n              </TYPE.body>\n            </AutoColumn>\n\n            <AutoColumn style={{ textAlign: 'center', gap: '16px', marginBottom: '12px' }}>\n              <TYPE.body fontWeight={500} color={theme.red1}>\n                <Trans>\n                  By adding this list you are implicitly trusting that the data is correct. Anyone can create a list,\n                  including creating fake versions of existing lists and lists that claim to represent projects that do\n                  not have one.\n                </Trans>\n              </TYPE.body>\n              <TYPE.body fontWeight={600} color={theme.red1}>\n                <Trans>If you purchase a token from this list, you may not be able to sell it back.</Trans>\n              </TYPE.body>\n            </AutoColumn>\n            <AutoRow justify=\"center\" style={{ cursor: 'pointer' }} onClick={() => setConfirmed(!confirmed)}>\n              <Checkbox\n                name=\"confirmed\"\n                type=\"checkbox\"\n                checked={confirmed}\n                onChange={() => setConfirmed(!confirmed)}\n              />\n              <TYPE.body ml=\"10px\" fontSize=\"16px\" color={theme.red1} fontWeight={500}>\n                <Trans>I understand</Trans>\n              </TYPE.body>\n            </AutoRow>\n          </Card>\n\n          <ButtonPrimary\n            disabled={!confirmed}\n            altDisabledStyle={true}\n            borderRadius=\"20px\"\n            padding=\"10px 1rem\"\n            onClick={handleAddList}\n          >\n            <Trans>Import</Trans>\n          </ButtonPrimary>\n          {addError ? (\n            <TYPE.error title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }} error>\n              {addError}\n            </TYPE.error>\n          ) : null}\n        </AutoColumn>\n        {/* </Card> */}\n      </PaddedColumn>\n    </Wrapper>\n  )\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropdown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.97168 1L6.20532 6L11.439 1\",\n    stroke: \"#AEAEAE\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdown);\nexport default __webpack_public_path__ + \"static/media/dropdown.fef18eeb.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport styled from 'styled-components/macro'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: #A0A0A0;\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color:transparent;\n  font-size: ${({ fontSize }) => fontSize ?? '24px'};\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n  text-align: right;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text4};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  prependSymbol,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n  prependSymbol?: string | undefined\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={prependSymbol && value ? prependSymbol + value : value}\n      onChange={(event) => {\n        if (prependSymbol) {\n          const value = event.target.value\n\n          // cut off prepended symbol\n          const formattedValue = value.toString().includes(prependSymbol)\n            ? value.toString().slice(1, value.toString().length + 1)\n            : value\n\n          // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n          enforcer(formattedValue.replace(/,/g, '.'))\n        } else {\n          enforcer(event.target.value.replace(/,/g, '.'))\n        }\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n\n// const inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n","import {Pair} from '@uniswap/v2-sdk'\nimport {Currency, CurrencyAmount, Percent, Token} from '@uniswap/sdk-core'\nimport {useState, useCallback, ReactNode} from 'react'\nimport styled from 'styled-components/macro'\nimport {darken} from 'polished'\nimport {useCurrencyBalance} from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport CurrencyLogo from '../CurrencyLogo'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport {ButtonGray} from '../Button'\nimport {RowBetween, RowFixed} from '../Row'\nimport {TYPE} from '../../theme'\nimport {Input as NumericalInput} from '../NumericalInput'\nimport {ReactComponent as DropDown} from '../../assets/images/dropdown.svg'\nimport {useActiveWeb3React} from '../../hooks/web3'\nimport {Trans} from '@lingui/macro'\nimport useTheme from '../../hooks/useTheme'\nimport {Lock} from 'react-feather'\nimport {AutoColumn} from 'components/Column'\nimport {FiatValue} from './FiatValue'\nimport {formatCurrencyAmount} from 'utils/formatCurrencyAmount'\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  ${({theme}) => theme.flexColumnNoWrap}\n  position: relative;\n  border-radius: ${({hideInput}) => (hideInput ? '16px' : '20px')};\n  background-color: #ffffff;\n  z-index: 1;\n  width: ${({hideInput}) => (hideInput ? '100%' : 'initial')};\n`\n\nconst FixedContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  border-radius: 20px;\n  background-color: #ffffff;\n  opacity: 0.95;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2;\n`\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: ${({hideInput}) => (hideInput ? '16px' : '20px')};\n  border: 1px solid #EAEBEE;\n  background-color: #F7F8FA;\n  width: ${({hideInput}) => (hideInput ? '100%' : 'initial')};\n  :focus,\n  :hover {\n    border: 1px solid #EAEBEE};\n  }\n`\n\nconst CurrencySelect = styled(ButtonGray)<{ selected: boolean; hideInput?: boolean }>`\n  align-items: center;\n  font-size: 24px;\n  font-weight: 500;\n  color: #000000;\n  background: #FFFFFF;\n  border-radius: 16px;\n  box-shadow: ${({selected}) => (selected ? 'none' : '0px 6px 10px rgba(0, 0, 0, 0.075)')};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  height: ${({hideInput}) => (hideInput ? '2.8rem' : '2.4rem')};\n  width: ${({hideInput}) => (hideInput ? '100%' : 'initial')};\n  padding: 0 8px;\n  justify-content: space-between;\n  margin-right: ${({hideInput}) => (hideInput ? '0' : '12px')};\n  :focus,\n  :hover {\n    background-color:#FFFFFF;\n  }\n`\n\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  ${({theme}) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: ${({selected}) => (selected ? ' 1rem 1rem 0.75rem 1rem' : '1rem 1rem 0.75rem 1rem')};\n  .isDown{\n        background-color:rgb(232, 0, 111);\n          color: #FFFFFF;\n          path {\n            stroke: #ffffff;\n            stroke-width: 1.5px;\n          }\n  }\n  \n`\n\nconst LabelRow = styled.div`\n  ${({theme}) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({theme}) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0 1rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({theme}) => darken(0.2, theme.text2)};\n  }\n`\n\nconst FiatRow = styled(LabelRow)`\n  justify-content: flex-end;\n`\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`\n\nconst StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n  margin: 0 0.25rem 0 0.35rem;\n  height: 35%;\n  \n  path {\n    stroke: ${({selected, theme}) => (theme.black)};\n    stroke-width: 1.5px;\n  }\n`\n\nconst StyledTokenName = styled.span<{ active?: boolean }>`\n  ${({active}) => (active ? '  margin: 0 0.25rem 0 0.25rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n  font-size:  ${({active}) => (active ? '18px' : '18px')};\n`\n\nconst StyledBalanceMax = styled.button<{ disabled?: boolean }>`\n  background-color: transparent;\n  border: none;\n  border-radius: 12px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  padding: 0;\n  color: ${({theme}) => theme.primaryText1};\n  opacity: ${({disabled}) => (!disabled ? 1 : 0.4)};\n  pointer-events: ${({disabled}) => (!disabled ? 'initial' : 'none')};\n  margin-left: 0.25rem;\n\n  :focus {\n    outline: none;\n  }\n\n  ${({theme}) => theme.mediaWidth.upToExtraSmall`\n    margin-right: 0.5rem;\n  `};\n`\n\ninterface CurrencyInputPanelProps {\n    value: string\n    onUserInput: (value: string) => void\n    onMax?: () => void\n    showMaxButton: boolean\n    label?: ReactNode\n    onCurrencySelect?: (currency: Currency) => void\n    currency?: Currency | null\n    hideBalance?: boolean\n    pair?: Pair | null\n    hideInput?: boolean\n    otherCurrency?: Currency | null\n    fiatValue?: CurrencyAmount<Token> | null\n    priceImpact?: Percent\n    id: string\n    showCommonBases?: boolean\n    showCurrencyAmount?: boolean\n    disableNonToken?: boolean\n    isDown?: boolean\n    renderBalance?: (amount: CurrencyAmount<Currency>) => ReactNode\n    locked?: boolean\n}\n\nexport default function CurrencyInputPanel({\n                                               value,\n                                               onUserInput,\n                                               onMax,\n                                               showMaxButton,\n                                               onCurrencySelect,\n                                               currency,\n                                               otherCurrency,\n                                               id,\n                                               showCommonBases,\n                                               showCurrencyAmount,\n                                               disableNonToken,\n                                               renderBalance,\n                                               fiatValue,\n                                               priceImpact,\n                                               hideBalance = false,\n                                               pair = null, // used for double token logo\n                                               hideInput = false,\n                                               locked = false,\n                                               isDown = false,\n                                               ...rest\n                                           }: CurrencyInputPanelProps) {\n    const [modalOpen, setModalOpen] = useState(false)\n    const {account} = useActiveWeb3React()\n    const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n    const theme = useTheme()\n\n    const handleDismissSearch = useCallback(() => {\n        setModalOpen(false)\n    }, [setModalOpen])\n\n    return (\n        <InputPanel id={id} hideInput={hideInput} {...rest}>\n            {locked && (\n                <FixedContainer>\n                    <AutoColumn gap=\"sm\" justify=\"center\">\n                        <Lock/>\n                        <TYPE.label fontSize=\"12px\" textAlign=\"center\" padding=\"0 12px\">\n                            <Trans>The market price is outside your specified price range. Single-asset deposit\n                                only.</Trans>\n                        </TYPE.label>\n                    </AutoColumn>\n                </FixedContainer>\n            )}\n            <Container hideInput={hideInput}>\n                <InputRow style={hideInput ? {padding: '0', borderRadius: '8px'} : {}} selected={!onCurrencySelect}>\n                    <CurrencySelect\n                        selected={!!currency}\n                        hideInput={hideInput}\n                        className={currency?\"open-currency-select-button \":\"open-currency-select-button isDown\"}\n                        onClick={() => {\n                            if (onCurrencySelect) {\n                                setModalOpen(true)\n                            }\n                        }}\n                    >\n                        <Aligner>\n                            <RowFixed>\n                                {pair ? (\n                                    <span style={{marginRight: '0.5rem'}}>\n                    <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true}/>\n                  </span>\n                                ) : currency ? (\n                                    <CurrencyLogo style={{marginRight: '0.5rem'}} currency={currency} size={'24px'}/>\n                                ) : null}\n                                {pair ? (\n                                    <StyledTokenName className=\"pair-name-container\">\n                                        {pair?.token0.symbol}:{pair?.token1.symbol}\n                                    </StyledTokenName>\n                                ) : (\n                                    <StyledTokenName className=\"token-symbol-container\"\n                                                     active={Boolean(currency && currency.symbol)}>\n                                        {(currency && currency.symbol && currency.symbol.length > 20\n                                            ? currency.symbol.slice(0, 4) +\n                                            '...' +\n                                            currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\n                                            : currency?.symbol) || <Trans>Select a token</Trans>}\n                                    </StyledTokenName>\n                                )}\n                            </RowFixed>\n                            {onCurrencySelect && <StyledDropDown selected={!!currency}/>}\n                        </Aligner>\n                    </CurrencySelect>\n                    {!hideInput && (\n                        <>\n                            <NumericalInput\n                                className=\"token-amount-input\"\n                                value={value}\n                                onUserInput={(val) => {\n                                    onUserInput(val)\n                                }}\n                            />\n                        </>\n                    )}\n                </InputRow>\n                {!hideInput && !hideBalance && (\n                    <FiatRow>\n                        <RowBetween>\n                            {account ? (\n                                <RowFixed style={{height: '17px'}}>\n                                    <TYPE.body\n                                        onClick={onMax}\n                                        color={theme.text2}\n                                        fontWeight={400}\n                                        fontSize={14}\n                                        style={{display: 'inline', cursor: 'pointer'}}\n                                    >\n                                        {!hideBalance && currency && selectedCurrencyBalance ? (\n                                            renderBalance ? (\n                                                renderBalance(selectedCurrencyBalance)\n                                            ) : (\n                                                <Trans>\n                                                    Balance: {formatCurrencyAmount(selectedCurrencyBalance, 9)} {currency.symbol}\n                                                </Trans>\n                                            )\n                                        ) : null}\n                                    </TYPE.body>\n                                    {showMaxButton && selectedCurrencyBalance ? (\n                                        <StyledBalanceMax onClick={onMax}>\n                                            <Trans>(Max)</Trans>\n                                        </StyledBalanceMax>\n                                    ) : null}\n                                </RowFixed>\n                            ) : (\n                                <span/>\n                            )}\n                            <FiatValue fiatValue={fiatValue} priceImpact={priceImpact}/>\n                        </RowBetween>\n                    </FiatRow>\n                )}\n            </Container>\n            {onCurrencySelect && (\n                <CurrencySearchModal\n                    isOpen={modalOpen}\n                    onDismiss={handleDismissSearch}\n                    onCurrencySelect={onCurrencySelect}\n                    selectedCurrency={currency}\n                    otherSelectedCurrency={otherCurrency}\n                    showCommonBases={showCommonBases}\n                    showCurrencyAmount={showCurrencyAmount}\n                    disableNonToken={disableNonToken}\n                />\n            )}\n        </InputPanel>\n    )\n}\n","import { Price, CurrencyAmount, Currency, Fraction } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nexport function formatCurrencyAmount(amount: CurrencyAmount<Currency> | undefined, sigFigs: number) {\n  if (!amount) {\n    return '-'\n  }\n\n  if (JSBI.equal(amount.quotient, JSBI.BigInt(0))) {\n    return '0'\n  }\n\n  if (amount.divide(amount.decimalScale).lessThan(new Fraction(1, 100000))) {\n    return '<0.00001'\n  }\n\n  return amount.toSignificant(sigFigs)\n}\n\nexport function formatPrice(price: Price<Currency, Currency> | undefined, sigFigs: number) {\n  if (!price) {\n    return '-'\n  }\n\n  if (parseFloat(price.toFixed(sigFigs)) < 0.0001) {\n    return '<0.0001'\n  }\n\n  return price.toSignificant(sigFigs)\n}\n","import { computePoolAddress } from '@uniswap/v3-sdk'\nimport { V3_CORE_FACTORY_ADDRESSES } from '../constants/addresses'\nimport { IUniswapV3PoolStateInterface } from '../types/v3/IUniswapV3PoolState'\nimport { Token, Currency } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { useActiveWeb3React } from './web3'\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\n\nimport { Pool, FeeAmount } from '@uniswap/v3-sdk'\nimport { abi as IUniswapV3PoolStateABI } from '../constants/json/uniswapV3Core/IUniswapV3PoolState.json'\nimport { Interface } from '@ethersproject/abi'\n\nconst POOL_STATE_INTERFACE = new Interface(IUniswapV3PoolStateABI) as IUniswapV3PoolStateInterface\n\nexport enum PoolState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePools(\n  poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][]\n): [PoolState, Pool | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const transformed: ([Token, Token, FeeAmount] | null)[] = useMemo(() => {\n    return poolKeys.map(([currencyA, currencyB, feeAmount]) => {\n      if (!chainId || !currencyA || !currencyB || !feeAmount) return null\n\n      const tokenA = currencyA?.wrapped\n      const tokenB = currencyB?.wrapped\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return null\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [token0, token1, feeAmount]\n    })\n  }, [chainId, poolKeys])\n\n  const poolAddresses: (string | undefined)[] = useMemo(() => {\n    const v3CoreFactoryAddress = chainId && V3_CORE_FACTORY_ADDRESSES[chainId]\n\n    return transformed.map((value) => {\n      if (!v3CoreFactoryAddress || !value) return undefined\n      return computePoolAddress({\n        factoryAddress: v3CoreFactoryAddress,\n        tokenA: value[0],\n        tokenB: value[1],\n        fee: value[2],\n      })\n    })\n  }, [chainId, transformed])\n\n  const slot0s = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'slot0')\n  const liquidities = useMultipleContractSingleData(poolAddresses, POOL_STATE_INTERFACE, 'liquidity')\n\n  return useMemo(() => {\n    return poolKeys.map((_key, index) => {\n      const [token0, token1, fee] = transformed[index] ?? []\n      if (!token0 || !token1 || !fee) return [PoolState.INVALID, null]\n\n      const { result: slot0, loading: slot0Loading, valid: slot0Valid } = slot0s[index]\n      const { result: liquidity, loading: liquidityLoading, valid: liquidityValid } = liquidities[index]\n\n      if (!slot0Valid || !liquidityValid) return [PoolState.INVALID, null]\n      if (slot0Loading || liquidityLoading) return [PoolState.LOADING, null]\n\n      if (!slot0 || !liquidity) return [PoolState.NOT_EXISTS, null]\n\n      if (!slot0.sqrtPriceX96 || slot0.sqrtPriceX96.eq(0)) return [PoolState.NOT_EXISTS, null]\n\n      try {\n        return [PoolState.EXISTS, new Pool(token0, token1, fee, slot0.sqrtPriceX96, liquidity[0], slot0.tick)]\n      } catch (error) {\n        console.error('Error when constructing the pool', error)\n        return [PoolState.NOT_EXISTS, null]\n      }\n    })\n  }, [liquidities, poolKeys, slot0s, transformed])\n}\n\nexport function usePool(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n  feeAmount: FeeAmount | undefined\n): [PoolState, Pool | null] {\n  const poolKeys: [Currency | undefined, Currency | undefined, FeeAmount | undefined][] = useMemo(\n    () => [[currencyA, currencyB, feeAmount]],\n    [currencyA, currencyB, feeAmount]\n  )\n\n  return usePools(poolKeys)[0]\n}\n","import { Currency, Token } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool } from '@uniswap/v3-sdk'\nimport { useMemo } from 'react'\nimport { useAllCurrencyCombinations } from './useAllCurrencyCombinations'\nimport { PoolState, usePools } from './usePools'\n\n/**\n * Returns all the existing pools that should be considered for swapping between an input currency and an output currency\n * @param currencyIn the input currency\n * @param currencyOut the output currency\n */\nexport function useV3SwapPools(\n  currencyIn?: Currency,\n  currencyOut?: Currency\n): {\n  pools: Pool[]\n  loading: boolean\n} {\n  const allCurrencyCombinations = useAllCurrencyCombinations(currencyIn, currencyOut)\n\n  const allCurrencyCombinationsWithAllFees: [Token, Token, FeeAmount][] = useMemo(\n    () =>\n      allCurrencyCombinations.reduce<[Token, Token, FeeAmount][]>((list, [tokenA, tokenB]) => {\n        return list.concat([\n          [tokenA, tokenB, FeeAmount.LOW],\n          [tokenA, tokenB, FeeAmount.MEDIUM],\n          [tokenA, tokenB, FeeAmount.HIGH],\n        ])\n      }, []),\n    [allCurrencyCombinations]\n  )\n\n  const pools = usePools(allCurrencyCombinationsWithAllFees)\n\n  return useMemo(() => {\n    return {\n      pools: pools\n        .filter((tuple): tuple is [PoolState.EXISTS, Pool] => {\n          return tuple[0] === PoolState.EXISTS && tuple[1] !== null\n        })\n        .map(([, pool]) => pool),\n      loading: pools.some(([state]) => state === PoolState.LOADING),\n    }\n  }, [pools])\n}\n","import { Currency, Token } from '@uniswap/sdk-core'\nimport flatMap from 'lodash.flatmap'\nimport { useMemo } from 'react'\nimport {\n    BASES_TO_CHECK_TRADES_AGAINST,\n    CUSTOM_BASES, getAswapAllPairs,\n} from '../constants/routing'\nimport { useActiveWeb3React } from './web3'\n\n//todo 是否是无用代码？？？\nexport function useAllCurrencyCombinations(currencyA?: Currency, currencyB?: Currency): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId ? [currencyA?.wrapped, currencyB?.wrapped] : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    // const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    // const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    // return [...common, ...additionalA, ...additionalB]\n    return [...common]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases]\n  )\n\n  const tmpss =  useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA, tokenB]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId]\n  );\n  return tmpss;\n}\n\n\nexport function useAllCurrencyCombinations1(currencyA?: Currency, currencyB?: Currency): [Token, Token][] {\n    const { account, chainId } = useActiveWeb3React()\n\n    const [tokenA, tokenB] = chainId ? [currencyA?.wrapped, currencyB?.wrapped] : [undefined, undefined]\n\n    // if(!tokenA || !tokenB){\n    //     return []\n    // }\n\n    const allAswapPairs = useMemo(() => {\n        return getAswapAllPairs(chainId)\n    },[chainId])\n    // const allAswapPairs = getAswapAllPairs(chainId)\n    //计算交易对\n    //如果存在则直接返回\n    const resPairs = new Array()\n    for (let i = 0; i < allAswapPairs.length; i++) {\n        if(\n            (allAswapPairs[i][0].address === tokenA?.address && allAswapPairs[i][1].address === tokenB?.address) ||\n            (allAswapPairs[i][0].address === tokenB?.address && allAswapPairs[i][1].address === tokenA?.address)\n        ){\n            resPairs.push(allAswapPairs[i])\n            return resPairs\n        }\n    }\n    //如果不存在则计算一层路径是否存在\n    //所有支持的跨路径的交易对\n    // const allTransPairs = new Array()\n    for (let i = 0; i < allAswapPairs.length; i++) {\n        for (let j = 0; j < allAswapPairs.length; j++) {\n            if(i === j){\n                continue\n            }\n            //交易对1的TokenA地址\n            const p1a = allAswapPairs[i][0].address;\n            //交易对1的TokenB地址\n            const p1b = allAswapPairs[i][1].address;\n            //交易对2的TokenA地址\n            const p2a = allAswapPairs[j][0].address;\n            //交易对2的TokenB地址\n            const p2b = allAswapPairs[j][1].address;\n            //todo 可以暂时注释\n            // if(p1a === p1b || p2a === p2b){\n            //     continue\n            // }\n            // if(p1a === p2a && p1b === p2b){\n            //     continue\n            // }\n            // if(p1a === p2b && p1b === p2a){\n            //     continue\n            // }\n            if(p1a === p2a){\n                //判断p1b和p2b 是否和 [tokenA,tokenB]相同\n                if(\n                    (p1b === tokenA?.address && p2b === tokenB?.address) ||\n                    (p1b === tokenB?.address && p2b === tokenA?.address)\n                ){\n                    // allTransPairs.push([[tokenA,tokenB],allAswapPairs[i],allAswapPairs[j]])\n                    resPairs.push(allAswapPairs[i])\n                    resPairs.push(allAswapPairs[j])\n                    return resPairs\n                }\n            } else if(p1a === p2b){\n                ////判断p1b和p2a\n                if(\n                    (p1b === tokenA?.address && p2a === tokenB?.address) ||\n                    (p1b === tokenB?.address && p2a === tokenA?.address)\n                ){\n                    // allTransPairs.push([[tokenA,tokenB],allAswapPairs[i],allAswapPairs[j]])\n                    resPairs.push(allAswapPairs[i])\n                    resPairs.push(allAswapPairs[j])\n                    return resPairs\n                }\n            }\n        }\n    }\n    //否则返回空\n    return []\n\n    // const bizPairs = [[tokenA, tokenB],[tokenB, tokenA]]\n    // const bizPairs = [[tokenA, tokenB],[tokenB, tokenA], ...allAswapPairs]\n    // const bizPairs = useMemo(() => {\n    //     if (!chainId) return []\n    //     if(!tokenA || !tokenB){\n    //         return []\n    //     }\n    //     const allTransPairs = TRANS_PAIRS[chainId];\n    //     const transPairs1 = [[tokenA, tokenB],[tokenB, tokenA]];\n    //     for (let index in allTransPairs){\n    //         if(\n    //             (allTransPairs[index][0][0].address === tokenA?.address && allTransPairs[index][0][1].address === tokenB?.address) ||\n    //             (allTransPairs[index][0][1].address === tokenA?.address && allTransPairs[index][0][0].address === tokenB?.address)\n    //         ){\n    //             transPairs1.push([allTransPairs[index][1][0],allTransPairs[index][1][1]]);\n    //             transPairs1.push([allTransPairs[index][2][0],allTransPairs[index][2][1]]);\n    //         }\n    //     }\n    //     return transPairs1;\n    //     }, [chainId, tokenA, tokenB]\n    // )\n\n    // const allPinnedPairs = useMemo(() => {\n    //     return getAddressAllPairs(account, chainId)\n    // },[account, chainId, tokenA, tokenB])\n    // const allPinnedPairs = getAddressAllPairs(account, chainId)\n\n    // console.log(\"router01\")\n\n    // const tmpss = useMemo(\n    //     () =>\n    //         tokenA && tokenB\n    //             ? bizPairs\n    //             // [\n    //             //     [tokenA, tokenB],\n    //             //     [tokenB, tokenA],\n    //             //     // TRANS_PAIRS[251][0][1],\n    //             //     // TRANS_PAIRS[251][0][2],\n    //             // ]\n    //                 .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n    //                 .filter(([t0, t1]) => t0.address !== t1.address)\n    //                 .filter(([tokenA, tokenB]) => {\n    //                     if (!chainId) return true\n    //                     // return true;\n    //                     // const allPinnedPairs = PINNED_PAIRS[chainId]\n    //                     // for (let pinnedPairs of allPinnedPairs){\n    //                     //     if(pinnedPairs[0].address === tokenA.address && pinnedPairs[1].address === tokenB.address){\n    //                     //         return true;\n    //                     //     }\n    //                     // }\n    //                     // trans路径的交易对\n    //                     // const allTransPairs = TRANS_PAIRS[chainId]\n    //                     for (let pairs of allAswapPairs){\n    //                         if(transPairs[0][0].address === tokenA.address && transPairs[0][1].address === tokenB.address){\n    //                             return true;\n    //                         }\n    //                     }\n    //                     return false;\n    //                 })\n    //             : [],\n    //     [tokenA, tokenB, chainId]\n    // );\n    //\n    // return tmpss;\n}","import { Currency } from '@uniswap/sdk-core'\nimport { Pool, Route } from '@uniswap/v3-sdk'\nimport { useMemo } from 'react'\nimport { useUserSingleHopOnly } from '../state/user/hooks'\nimport { useActiveWeb3React } from './web3'\nimport { useV3SwapPools } from './useV3SwapPools'\n\nfunction computeAllRoutes(\n  currencyIn: Currency,\n  currencyOut: Currency,\n  pools: Pool[],\n  chainId: number,\n  currentPath: Pool[] = [],\n  allPaths: Route<Currency, Currency>[] = [],\n  startCurrencyIn: Currency = currencyIn,\n  maxHops = 2\n): Route<Currency, Currency>[] {\n  const tokenIn = currencyIn?.wrapped\n  const tokenOut = currencyOut?.wrapped\n  if (!tokenIn || !tokenOut) throw new Error('Missing tokenIn/tokenOut')\n\n  for (const pool of pools) {\n    if (currentPath.indexOf(pool) !== -1 || !pool.involvesToken(tokenIn)) continue\n\n    const outputToken = pool.token0.equals(tokenIn) ? pool.token1 : pool.token0\n    if (outputToken.equals(tokenOut)) {\n      allPaths.push(new Route([...currentPath, pool], startCurrencyIn, currencyOut))\n    } else if (maxHops > 1) {\n      computeAllRoutes(\n        outputToken,\n        currencyOut,\n        pools,\n        chainId,\n        [...currentPath, pool],\n        allPaths,\n        startCurrencyIn,\n        maxHops - 1\n      )\n    }\n  }\n\n  return allPaths\n}\n\n/**\n * Returns all the routes from an input currency to an output currency\n * @param currencyIn the input currency\n * @param currencyOut the output currency\n */\nexport function useAllV3Routes(\n  currencyIn?: Currency,\n  currencyOut?: Currency\n): { loading: boolean; routes: Route<Currency, Currency>[] } {\n  const { chainId } = useActiveWeb3React()\n  const { pools, loading: poolsLoading } = useV3SwapPools(currencyIn, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (poolsLoading || !chainId || !pools || !currencyIn || !currencyOut) return { loading: true, routes: [] }\n\n    const routes = computeAllRoutes(currencyIn, currencyOut, pools, chainId, [], [], currencyIn, singleHopOnly ? 1 : 2)\n    return { loading: false, routes }\n  }, [chainId, currencyIn, currencyOut, pools, poolsLoading, singleHopOnly])\n}\n","import { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { encodeRouteToPath, Route, Trade } from '@uniswap/v3-sdk'\nimport { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSingleContractMultipleData } from '../state/multicall/hooks'\nimport { useAllV3Routes } from './useAllV3Routes'\nimport { useV3Quoter } from './useContract'\n\nexport enum V3TradeState {\n  LOADING,\n  INVALID,\n  NO_ROUTE_FOUND,\n  VALID,\n  SYNCING,\n}\n\n/**\n * Returns the best v3 trade for a desired exact input swap\n * @param amountIn the amount to swap in\n * @param currencyOut the desired output currency\n */\nexport function useBestV3TradeExactIn(\n  amountIn?: CurrencyAmount<Currency>,\n  currencyOut?: Currency\n): { state: V3TradeState; trade: Trade<Currency, Currency, TradeType.EXACT_INPUT> | null } {\n  const quoter = useV3Quoter()\n  const { routes, loading: routesLoading } = useAllV3Routes(amountIn?.currency, currencyOut)\n\n  const quoteExactInInputs = useMemo(() => {\n    return routes.map((route) => [\n      encodeRouteToPath(route, false),\n      amountIn ? `0x${amountIn.quotient.toString(16)}` : undefined,\n    ])\n  }, [amountIn, routes])\n\n  const quotesResults = useSingleContractMultipleData(quoter, 'quoteExactInput', quoteExactInInputs)\n\n  return useMemo(() => {\n    if (!amountIn || !currencyOut) {\n      return {\n        state: V3TradeState.INVALID,\n        trade: null,\n      }\n    }\n\n    if (routesLoading || quotesResults.some(({ loading }) => loading)) {\n      return {\n        state: V3TradeState.LOADING,\n        trade: null,\n      }\n    }\n\n    const { bestRoute, amountOut } = quotesResults.reduce(\n      (currentBest: { bestRoute: Route<Currency, Currency> | null; amountOut: BigNumber | null }, { result }, i) => {\n        if (!result) return currentBest\n\n        if (currentBest.amountOut === null) {\n          return {\n            bestRoute: routes[i],\n            amountOut: result.amountOut,\n          }\n        } else if (currentBest.amountOut.lt(result.amountOut)) {\n          return {\n            bestRoute: routes[i],\n            amountOut: result.amountOut,\n          }\n        }\n\n        return currentBest\n      },\n      {\n        bestRoute: null,\n        amountOut: null,\n      }\n    )\n\n    if (!bestRoute || !amountOut) {\n      return {\n        state: V3TradeState.NO_ROUTE_FOUND,\n        trade: null,\n      }\n    }\n\n    const isSyncing = quotesResults.some(({ syncing }) => syncing)\n\n    return {\n      state: isSyncing ? V3TradeState.SYNCING : V3TradeState.VALID,\n      trade: Trade.createUncheckedTrade({\n        route: bestRoute,\n        tradeType: TradeType.EXACT_INPUT,\n        inputAmount: amountIn,\n        outputAmount: CurrencyAmount.fromRawAmount(currencyOut, amountOut.toString()),\n      }),\n    }\n  }, [amountIn, currencyOut, quotesResults, routes, routesLoading])\n}\n\n/**\n * Returns the best v3 trade for a desired exact output swap\n * @param currencyIn the desired input currency\n * @param amountOut the amount to swap out\n */\nexport function useBestV3TradeExactOut(\n  currencyIn?: Currency,\n  amountOut?: CurrencyAmount<Currency>\n): { state: V3TradeState; trade: Trade<Currency, Currency, TradeType.EXACT_OUTPUT> | null } {\n  const quoter = useV3Quoter()\n  const { routes, loading: routesLoading } = useAllV3Routes(currencyIn, amountOut?.currency)\n\n  const quoteExactOutInputs = useMemo(() => {\n    return routes.map((route) => [\n      encodeRouteToPath(route, true),\n      amountOut ? `0x${amountOut.quotient.toString(16)}` : undefined,\n    ])\n  }, [amountOut, routes])\n\n  const quotesResults = useSingleContractMultipleData(quoter, 'quoteExactOutput', quoteExactOutInputs)\n\n  return useMemo(() => {\n    if (!amountOut || !currencyIn || quotesResults.some(({ valid }) => !valid)) {\n      return {\n        state: V3TradeState.INVALID,\n        trade: null,\n      }\n    }\n\n    if (routesLoading || quotesResults.some(({ loading }) => loading)) {\n      return {\n        state: V3TradeState.LOADING,\n        trade: null,\n      }\n    }\n\n    const { bestRoute, amountIn } = quotesResults.reduce(\n      (currentBest: { bestRoute: Route<Currency, Currency> | null; amountIn: BigNumber | null }, { result }, i) => {\n        if (!result) return currentBest\n\n        if (currentBest.amountIn === null) {\n          return {\n            bestRoute: routes[i],\n            amountIn: result.amountIn,\n          }\n        } else if (currentBest.amountIn.gt(result.amountIn)) {\n          return {\n            bestRoute: routes[i],\n            amountIn: result.amountIn,\n          }\n        }\n\n        return currentBest\n      },\n      {\n        bestRoute: null,\n        amountIn: null,\n      }\n    )\n\n    if (!bestRoute || !amountIn) {\n      return {\n        state: V3TradeState.NO_ROUTE_FOUND,\n        trade: null,\n      }\n    }\n\n    const isSyncing = quotesResults.some(({ syncing }) => syncing)\n\n    return {\n      state: isSyncing ? V3TradeState.SYNCING : V3TradeState.VALID,\n      trade: Trade.createUncheckedTrade({\n        route: bestRoute,\n        tradeType: TradeType.EXACT_OUTPUT,\n        inputAmount: CurrencyAmount.fromRawAmount(currencyIn, amountIn.toString()),\n        outputAmount: amountOut,\n      }),\n    }\n  }, [amountOut, currencyIn, quotesResults, routes, routesLoading])\n}\n","export default __webpack_public_path__ + \"static/media/blue-loader.249140da.svg\";","export default __webpack_public_path__ + \"static/media/metamask.02e3ec27.png\";","import { Currency } from '@uniswap/sdk-core'\nimport { ReactNode, useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { getExplorerLink, ExplorerDataType } from '../../utils/getExplorerLink'\nimport Modal from '../Modal'\nimport { ExternalLink } from '../../theme'\nimport { Text } from 'rebass'\nimport { CloseIcon, CustomLightSpinner } from '../../theme/components'\nimport { RowBetween, RowFixed } from '../Row'\nimport { AlertTriangle, ArrowUpCircle, CheckCircle } from 'react-feather'\nimport { ButtonPrimary, ButtonLight } from '../Button'\nimport { AutoColumn, ColumnCenter } from '../Column'\nimport Circle from '../../assets/images/blue-loader.svg'\nimport MetaMaskLogo from '../../assets/images/metamask.png'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport useAddTokenToMetamask from 'hooks/useAddTokenToMetamask'\nimport { Trans } from '@lingui/macro'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  padding: 1rem;\n`\nconst Section = styled(AutoColumn)<{ inline?: boolean }>`\n  padding: ${({ inline }) => (inline ? '0' : '0')};\n`\n\nconst BottomSection = styled(Section)`\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)<{ inline?: boolean }>`\n  padding: ${({ inline }) => (inline ? '20px 0' : '60px 0;')};\n`\n\nconst StyledLogo = styled.img`\n  height: 16px;\n  width: 16px;\n  margin-left: 6px;\n`\n\nexport function ConfirmationPendingContent({\n  onDismiss,\n  pendingText,\n  inline,\n}: {\n  onDismiss: () => void\n  pendingText: ReactNode\n  inline?: boolean // not in modal\n}) {\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        {!inline && (\n          <RowBetween>\n            <div />\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n        )}\n        <ConfirmedIcon inline={inline}>\n          <CustomLightSpinner src={Circle} alt=\"loader\" size={inline ? '40px' : '90px'} />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify={'center'}>\n          <Text fontWeight={500} fontSize={20} textAlign=\"center\">\n            <Trans>Waiting For Confirmation</Trans>\n          </Text>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <Text fontWeight={600} fontSize={14} color=\"\" textAlign=\"center\">\n              {pendingText}\n            </Text>\n          </AutoColumn>\n          <Text fontSize={12} color=\"#565A69\" textAlign=\"center\" marginBottom={12}>\n            <Trans>Confirm this transaction in your wallet</Trans>\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport function TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n  inline,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: number\n  currencyToAdd?: Currency | undefined\n  inline?: boolean // not in modal\n}) {\n  const theme = useContext(ThemeContext)\n\n  const { library } = useActiveWeb3React()\n\n  const { addToken, success } = useAddTokenToMetamask(currencyToAdd)\n\n  return (\n    <Wrapper>\n      <Section inline={inline}>\n        {!inline && (\n          <RowBetween>\n            <div />\n            <CloseIcon onClick={onDismiss} />\n          </RowBetween>\n        )}\n        <ConfirmedIcon inline={inline}>\n          <ArrowUpCircle strokeWidth={0.5} size={inline ? '40px' : '90px'} color={theme.primary1} />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify={'center'}>\n          <Text fontWeight={500} fontSize={20} textAlign=\"center\">\n            <Trans>Transaction Submitted</Trans>\n          </Text>\n          {chainId && hash && (\n            <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}>\n              <Text fontWeight={500} fontSize={14} color={theme.primary1}>\n                <Trans>View on Explorer</Trans>\n              </Text>\n            </ExternalLink>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <ButtonLight mt=\"12px\" padding=\"6px 12px\" width=\"fit-content\" onClick={addToken}>\n              {!success ? (\n                <RowFixed>\n                  <Trans>\n                    Add {currencyToAdd.symbol} to Metamask <StyledLogo src={MetaMaskLogo} />\n                  </Trans>\n                </RowFixed>\n              ) : (\n                <RowFixed>\n                  <Trans>Added {currencyToAdd.symbol} </Trans>\n                  <CheckCircle size={'16px'} stroke={theme.green1} style={{ marginLeft: '6px' }} />\n                </RowFixed>\n              )}\n            </ButtonLight>\n          )}\n          <ButtonPrimary onClick={onDismiss} style={{ margin: '20px 0 0 0' }}>\n            <Text fontWeight={500} fontSize={20}>\n              {inline ? <Trans>Return</Trans> : <Trans>Close</Trans>}\n            </Text>\n          </ButtonPrimary>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  title,\n  bottomContent,\n  onDismiss,\n  topContent,\n}: {\n  title: ReactNode\n  onDismiss: () => void\n  topContent: () => ReactNode\n  bottomContent?: () => ReactNode | undefined\n}) {\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <Text fontWeight={500} fontSize={16}>\n            {title}\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        {topContent()}\n      </Section>\n      {bottomContent && <BottomSection gap=\"12px\">{bottomContent()}</BottomSection>}\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: ReactNode; onDismiss: () => void }) {\n  const theme = useContext(ThemeContext)\n  return (\n    <Wrapper>\n      <Section>\n        <RowBetween>\n          <Text fontWeight={500} fontSize={20}>\n            <Trans>Error</Trans>\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <AutoColumn style={{ marginTop: 20, padding: '2rem 0' }} gap=\"24px\" justify=\"center\">\n          <AlertTriangle color={theme.red1} style={{ strokeWidth: 1.5 }} size={64} />\n          <Text\n            fontWeight={500}\n            fontSize={16}\n            color={theme.red1}\n            style={{ textAlign: 'center', width: '85%', wordBreak: 'break-word' }}\n          >\n            {message}\n          </Text>\n        </AutoColumn>\n      </Section>\n      <BottomSection gap=\"12px\">\n        <ButtonPrimary onClick={onDismiss}>\n          <Trans>Dismiss</Trans>\n        </ButtonPrimary>\n      </BottomSection>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  hash: string | undefined\n  content: () => ReactNode\n  attemptingTxn: boolean\n  pendingText: ReactNode\n  currencyToAdd?: Currency | undefined\n}\n\nexport default function TransactionConfirmationModal({\n  isOpen,\n  onDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}: ConfirmationModalProps) {\n  const { chainId } = useActiveWeb3React()\n\n  if (!chainId) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n","import { getTokenLogoURL } from './../components/CurrencyLogo/index'\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { useCallback, useState } from 'react'\nimport { useActiveWeb3React } from 'hooks/web3'\n\nexport default function useAddTokenToMetamask(currencyToAdd: Currency | undefined): {\n  addToken: () => void\n  success: boolean | undefined\n} {\n  const { library } = useActiveWeb3React()\n\n  const token: Token | undefined = currencyToAdd?.wrapped\n\n  const [success, setSuccess] = useState<boolean | undefined>()\n\n  const addToken = useCallback(() => {\n    if (library && library.provider.isMetaMask && library.provider.request && token) {\n      library.provider\n        .request({\n          method: 'wallet_watchAsset',\n          params: {\n            //@ts-ignore // need this for incorrect ethers provider type\n            type: 'ERC20',\n            options: {\n              address: token.address,\n              symbol: token.symbol,\n              decimals: token.decimals,\n              image: getTokenLogoURL(token.address),\n            },\n          },\n        })\n        .then((success) => {\n          setSuccess(success)\n        })\n        .catch(() => setSuccess(false))\n    } else {\n      setSuccess(false)\n    }\n  }, [library, token])\n\n  return { addToken, success }\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useAppSelector } from 'state/hooks'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useAppSelector((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n\nexport function useTransactionExpirationSecs(): number | undefined {\n  return useAppSelector((state) => state.user.userDeadline)\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticall2Contract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticall2Contract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { Pair, Trade } from '@aswaporg/aswap-v2-sdk'\nimport { useMemo } from 'react'\nimport { isTradeBetter } from 'utils/isTradeBetter'\nimport { BETTER_TRADE_LESS_HOPS_THRESHOLD } from '../constants/misc'\nimport { useAllCurrencyCombinations1} from './useAllCurrencyCombinations'\nimport {PairState, useV2Pairs, useV2Pairs1} from './useV2Pairs'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  // const allCurrencyCombinations = useAllCurrencyCombinations1(currencyA, currencyB)\n  // const allPairs = useV2Pairs(allCurrencyCombinations)\n  const allPairs = useV2Pairs1(currencyA, currencyB)\n\n  // only pass along valid pairs, non-duplicated pairs\n  const aaa = useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {})\n      ),\n    [allPairs]\n  );\n  // console.log(\"9993\", aaa, currencyA, currencyB)\n\n  return aaa;\n}\n\n//跨路径的最大深度\nconst MAX_HOPS = 2\n\n/**\n * swap 代币：输入币1的数量，展示币2的兑换数量\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useV2TradeExactIn(\n  currencyAmountIn?: CurrencyAmount<Currency>,\n  currencyOut?: Currency,\n  { maxHops = MAX_HOPS } = {}\n): Trade<Currency, Currency, TradeType.EXACT_INPUT> | null {\n  //根据swap的代币 获取交易对（包含当前交易对的对应全部流通性的数量）\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n  // console.log(\"aaa1\", maxHops, allowedPairs, currencyAmountIn, currencyOut);\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (maxHops === 1) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<Currency, Currency, TradeType.EXACT_INPUT> | null = null\n      for (let i = 1; i <= maxHops; i++) {\n        const currentTrade: Trade<Currency, Currency, TradeType.EXACT_INPUT> | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, maxHops])\n}\n\n/**\n * swap 代币：输入币2的数量，展示币1的兑换数量\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useV2TradeExactOut(\n  currencyIn?: Currency,\n  currencyAmountOut?: CurrencyAmount<Currency>,\n  { maxHops = MAX_HOPS } = {}\n): Trade<Currency, Currency, TradeType.EXACT_OUTPUT> | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n  // const allowedPairs = [allowedPairs0[0]];\n  // console.log(\"aaa2\", allowedPairs, currencyIn, currencyAmountOut);\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (maxHops === 1) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<Currency, Currency, TradeType.EXACT_OUTPUT> | null = null\n      for (let i = 1; i <= maxHops; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, maxHops])\n}\n","import { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../constants/misc'\nimport { Percent, Currency, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as StarV2Trade } from '@aswaporg/aswap-v2-sdk'\nimport { Trade as V3Trade } from '@uniswap/v3-sdk'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA:\n    | StarV2Trade<Currency, Currency, TradeType>\n    | V2Trade<Currency, Currency, TradeType>\n    | V3Trade<Currency, Currency, TradeType>\n    | undefined\n    | null,\n  tradeB:\n    | StarV2Trade<Currency, Currency, TradeType>\n    | V2Trade<Currency, Currency, TradeType>\n    | V3Trade<Currency, Currency, TradeType>\n    | undefined\n    | null,\n  minimumDelta: Percent = ZERO_PERCENT\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !tradeA.inputAmount.currency.equals(tradeB.inputAmount.currency) ||\n    !tradeB.outputAmount.currency.equals(tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Comparing incomparable trades')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  } else {\n    return tradeA.executionPrice.asFraction\n      .multiply(minimumDelta.add(ONE_HUNDRED_PERCENT))\n      .lessThan(tradeB.executionPrice)\n  }\n}\n","import Tooltip from 'components/Tooltip'\nimport { useState } from 'react'\nimport styled from 'styled-components/macro'\n\nconst TextWrapper = styled.span<{ margin: boolean; link?: boolean; fontSize?: string; adjustSize?: boolean }>`\n  margin-left: ${({ margin }) => margin && '4px'};\n  color: ${({ theme, link }) => (link ? theme.blue1 : theme.text1)};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst HoverInlineText = ({\n  text,\n  maxCharacters = 20,\n  margin = false,\n  adjustSize = false,\n  fontSize,\n  link,\n  ...rest\n}: {\n  text?: string\n  maxCharacters?: number\n  margin?: boolean\n  adjustSize?: boolean\n  fontSize?: string\n  link?: boolean\n}) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return <span />\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          link={link}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper margin={margin} adjustSize={adjustSize} link={link} fontSize={fontSize} {...rest}>\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default HoverInlineText\n","import { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport useTheme from '../../hooks/useTheme'\nimport { TYPE } from '../../theme'\nimport { warningSeverity } from '../../utils/prices'\nimport HoverInlineText from 'components/HoverInlineText'\nimport { Trans } from '@lingui/macro'\n\nexport function FiatValue({\n  fiatValue,\n  priceImpact,\n}: {\n  fiatValue: CurrencyAmount<Currency> | null | undefined\n  priceImpact?: Percent\n}) {\n  const theme = useTheme()\n  const priceImpactColor = useMemo(() => {\n    if (!priceImpact) return undefined\n    if (priceImpact.lessThan('0')) return theme.green1\n    const severity = warningSeverity(priceImpact)\n    if (severity < 1) return theme.text3\n    if (severity < 3) return theme.yellow1\n    return theme.red1\n  }, [priceImpact, theme.green1, theme.red1, theme.text3, theme.yellow1])\n\n  return (\n    <TYPE.body fontSize={14} color={fiatValue ? theme.text2 : theme.text4}>\n      {fiatValue ? (\n        <Trans>\n          ~$ <HoverInlineText text={fiatValue?.toSignificant(6, { groupSeparator: ',' })} />\n        </Trans>\n      ) : (\n        ''\n      )}\n      {priceImpact ? (\n        <span style={{ color: priceImpactColor }}>\n          {' '}\n          (<Trans>{priceImpact.multiply(-1).toSignificant(3)}%</Trans>)\n        </span>\n      ) : null}\n    </TYPE.body>\n  )\n}\n"],"sourceRoot":""}